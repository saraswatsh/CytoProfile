[{"path":[]},{"path":"https://saraswatsh.github.io/CytoProfile/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement shubh.saraswat00@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"cytoprofile","dir":"Articles","previous_headings":"","what":"CytoProfile","title":"Getting Started with CytoProfile","text":"goal CytoProfile conduct quality control using biological meaningful cutoff raw measured values cytokines. Specifically, test distributional symmetry suggest adopt transformation. Conduct exploratory analysis including summary statistics, generate enriched barplots, boxplots. , conduct univariate analysis multivariate analysis advance analysis.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"installation","dir":"Articles","previous_headings":"CytoProfile","what":"Installation","title":"Getting Started with CytoProfile","text":"installation CytoProfile package, make sure install BiocManager mix0mics packages using: can install development version CytoProfile GitHub :","code":"## install BiocManager if (!requireNamespace(\"BiocManager\", quietly = TRUE)) install.packages(\"BiocManager\")  ## install mixOmics  BiocManager::install('mixOmics') # install.packages(\"devtools\") devtools::install_github(\"saraswatsh/CytoProfile\")"},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"example","dir":"Articles","previous_headings":"CytoProfile","what":"Example","title":"Getting Started with CytoProfile","text":"examples using functions provided CytoProfile. saved generated files PDF PNG format found Output Folder.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"data-loading-and-set-up","dir":"Articles","previous_headings":"CytoProfile","what":"1. Data Loading and set up","title":"Getting Started with CytoProfile","text":"","code":"# Loading all packages required # Data manipulation and reshaping library(dplyr)       # For data filtering, grouping, and summarising. library(tidyr)       # For reshaping data (e.g., pivot_longer, pivot_wider).  # Plotting and visualization library(ggplot2)     # For creating all the ggplot-based visualizations. library(gridExtra)   # For arranging multiple plots on a single page. library(ggrepel)     # For improved label placement in plots (e.g., volcano plots). library(gplots)      # For heatmap.2, which is used to generate heatmaps. library(plot3D)      # For creating 3D scatter plots in PCA and sPLS-DA analyses. library(reshape2)    # For data transformation (e.g., melt) in cross-validation plots.  # Statistical analysis library(mixOmics)    # For multivariate analyses (PCA, sPLS-DA, etc.). library(e1071)     # For computing skewness and kurtosis. library(pROC)        # For ROC curve generation in machine learning model evaluation.  # Machine learning library(xgboost)     # For building XGBoost classification models. library(randomForest) # For building Random Forest classification models. library(caret)       # For cross-validation and other machine learning utilities.  # Package development and document rendering library(knitr)       # For knitting RMarkdown files and setting chunk options. library(devtools)    # For installing the development version of the package from GitHub.  # devtools::install_github(\"saraswatsh/CytoProfile\") library(CytoProfile)  # Loading in data data(\"ExampleData1\") data_df <- ExampleData1"},{"path":[]},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"boxplots","dir":"Articles","previous_headings":"CytoProfile > 2. Exploratory Data Analysis","what":"Boxplots","title":"Getting Started with CytoProfile","text":"","code":"# Generating boxplots to check for outliers for raw values # Generating boxplots to check for outliers for raw values cyt_bp(data_df[, -c(1:3)],         pdf_title = \"boxplot_by_cytokine_raw.pdf\")   #> agg_png  #>       2 # Removing the first 4 columns to retain only continuous variables.  # Generating boxplots to check for outliers for log2 values cyt_bp(log2(data_df[, -c(1:3)]),         pdf_title = \"boxplot_by_cytokine_log2.pdf\")   #> agg_png  #>       2 # Using log2 transformation for cytokine values."},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"group-specific-boxplots","dir":"Articles","previous_headings":"CytoProfile > 2. Exploratory Data Analysis","what":"Group-Specific Boxplots","title":"Getting Started with CytoProfile","text":"","code":"# Raw values for group-specific boxplots cyt_bp2(data_df[, -c(3)],          pdf_title = \"boxplot_by_group_and_treatment_raw.pdf\",          scale = NULL) #> agg_png  #>       2  # Log2-transformed group-specific boxplots cyt_bp2(data_df[, -c(3)],          pdf_title = \"boxplot_by_group_and_treatment_log2.pdf\",          scale = \"log2\") #> agg_png  #>       2"},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"skewness-and-kurtosis","dir":"Articles","previous_headings":"CytoProfile","what":"3. Skewness and Kurtosis","title":"Getting Started with CytoProfile","text":"","code":"# Histogram of skewness and kurtosis for overall raw data cyt_skku(data_df[, -c(1:3)],           pdf_title = \"skew_and_kurtosis.pdf\",           group_cols = NULL)  # Histogram of skewness and kurtosis with grouping (e.g., \"Group\") cyt_skku(ExampleData1[, -c(2:3)],           pdf_title = \"skew_and_kurtosis_2.pdf\",           group_cols = c(\"Group\"))"},{"path":[]},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"basic-error-bar-plot","dir":"Articles","previous_headings":"CytoProfile > 4. Error Bar Plots","what":"Basic Error Bar Plot","title":"Getting Started with CytoProfile","text":"","code":"# Generating basic error bar plots cytokine_mat <- ExampleData1[, -c(1:3)]  # Extract all cytokines cytokineNames <- colnames(cytokine_mat)  # Extract cytokine names nCytokine <- length(cytokineNames)  # Total number of cytokines results <- cyt_skku(ExampleData1[, -c(3)], print_res_log = TRUE,                      group_cols = c(\"Group\", \"Treatment\")) pdf(\"bar_error_plot.pdf\") par(mfrow = c(2,2), mar = c(8.1, 4.1, 4.1, 2.1)) for (k in 1:nCytokine) {   center_df <- data.frame(name = rownames(results[,,k]), results[,,k])   cyt_errbp(center_df,   p_lab = FALSE, es_lab = FALSE, class_symbol = TRUE,   y_lab = \"Concentration in log2 scale\", main = cytokineNames[k]) } dev.off() #> agg_png  #>       2"},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"enriched-error-bar-plot-with-p-values-and-effect-sizes","dir":"Articles","previous_headings":"CytoProfile > 4. Error Bar Plots","what":"Enriched Error Bar Plot with p-values and Effect Sizes","title":"Getting Started with CytoProfile","text":"","code":"# Generating Error Bar Plot enriched with p-value and effect size  data_df <- ExampleData1[, -3] cyt_mat <- log2(data_df[, -c(1:2)]) data_df1 <- data.frame(data_df[, 1:2], cyt_mat) cytokineNames <- colnames(cyt_mat) nCytokine <- length(cytokineNames) condt <- !is.na(cyt_mat) & (cyt_mat > 0) Cutoff <- min(cyt_mat[condt], na.rm = TRUE) / 10  # Create matrices for ANOVA and Tukey results p_aov_mat <- matrix(NA, nrow = nCytokine, ncol = 3) dimnames(p_aov_mat) <- list(cytokineNames,                              c(\"Group\", \"Treatment\", \"Interaction\")) p_groupComp_mat <- matrix(NA, nrow = nCytokine, ncol = 3) dimnames(p_groupComp_mat) <- list(cytokineNames,                                    c(\"2-1\", \"3-1\", \"3-2\")) ssmd_groupComp_stm_mat <- mD_groupComp_stm_mat <- p_groupComp_stm_mat <-    p_groupComp_mat  for (i in 1:nCytokine) {   Cytokine <- (cyt_mat[, i] + Cutoff)   cytokine_aov <- aov(Cytokine ~ Group * Treatment, data = data_df)   aov_table <- summary(cytokine_aov)[[1]]   p_aov_mat[i, ] <- aov_table[1:3, 5]   p_groupComp_mat[i, ] <- TukeyHSD(cytokine_aov)$Group[1:3, 4]   p_groupComp_stm_mat[i, ] <- TukeyHSD(cytokine_aov)$`Group:Treatment`[1:3, 4]   mD_groupComp_stm_mat[i, ] <- TukeyHSD(cytokine_aov)$`Group:Treatment`[1:3, 1]   ssmd_groupComp_stm_mat[i, ] <- mD_groupComp_stm_mat[i, ] /      sqrt(2 * aov_table[\"Residuals\", \"Mean Sq\"]) }  results <- cyt_skku(ExampleData1[, -c(3)], print_res_log = TRUE,                      group_cols = c(\"Group\", \"Treatment\")) pdf(\"bar_error_plot_enriched.pdf\") par(mfrow = c(2,3), mar = c(8.1, 4.1, 4.1, 2.1)) for (k in 1:nCytokine) {   result_mat <- results[1:9, , k]   center_df <- data.frame(     name = rownames(result_mat),     result_mat[, c(\"center\", \"spread\")],     p.value = c(1, p_groupComp_stm_mat[k, 1:2]),     effect.size = c(0, ssmd_groupComp_stm_mat[k, 1:2])   )   cyt_errbp(center_df, p_lab = TRUE, es_lab = TRUE,              class_symbol = TRUE,             y_lab = \"Concentration in log2 scale\",              main = cytokineNames[k]) } dev.off() #> agg_png  #>       2"},{"path":[]},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"two-sample-t-test-and-mann-whitney-u-test","dir":"Articles","previous_headings":"CytoProfile > 5. Univariate Analysis","what":"Two Sample T-test and Mann Whitney U Test","title":"Getting Started with CytoProfile","text":"","code":"# Performing Two Sample T-test and Mann Whitney U Test data_df <- ExampleData1[, -c(3)] data_df <- filter(data_df, Group != \"ND\", Treatment != \"Unstimulated\") # Two sample T-test cyt_ttest(data_df[, c(1:2, 5:6)], scale = \"log2\") #> T-test p-value for PreT2D vs T2D on IFN.G: 0.02082 #> T-test p-value for PreT2D vs T2D on IL.10: 0.02484 #> T-test p-value for CD3/CD28 vs LPS on IFN.G: 7.31e-22 #> T-test p-value for CD3/CD28 vs LPS on IL.10: 0.0001402 # Mann-Whitney U Test cyt_ttest(data_df[, c(1:2, 5:6)]) #> Mann-Whitney U test p-value for PreT2D vs T2D on IFN.G: 0.008462 #> Mann-Whitney U test p-value for PreT2D vs T2D on IL.10: 0.01191 #> Mann-Whitney U test p-value for CD3/CD28 vs LPS on IFN.G: 5.915e-19 #> Mann-Whitney U test p-value for CD3/CD28 vs LPS on IL.10: 3.278e-05"},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"anova-comparisons-test","dir":"Articles","previous_headings":"CytoProfile > 5. Univariate Analysis","what":"ANOVA Comparisons Test","title":"Getting Started with CytoProfile","text":"","code":"# Perform ANOVA comparisons test (example with 2 cytokines) cyt_anova(data_df[, c(1:2, 5:6)]) #> $IFN.G_Group #> [1] 0.00356939 #>  #> $IL.10_Group #> [1] 0.003323717 #>  #> $IFN.G_Treatment #> [1] 3.805612e-08 #>  #> $IL.10_Treatment #> [1] 0.0002059574"},{"path":[]},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"partial-least-squares-discriminant-analysis-pls-da","dir":"Articles","previous_headings":"CytoProfile > 6. Multivariate Analysis","what":"Partial Least Squares Discriminant Analysis (PLS-DA)","title":"Getting Started with CytoProfile","text":"","code":"# In this code, we will have background predict to be turned on to see the classification areas and  # we will also print out the confusion matrix based on classification.  # Note this takes into account all groups and treatment and all values are log transformed through  # cyt.plsda function.  data_df <- ExampleData1 cyt_splsda(data_df[, -c(3)],            pdf_title = \"example_spls_da_analysis.pdf\",            colors = c(\"black\", \"purple\", \"red2\"),           bg = TRUE, scale = \"log2\",            conf_mat = TRUE, var_num = 25,            cv_opt = \"loocv\",           comp_num = 3, pch_values = c(16, 4, 3),            style = \"3d\",            group_col = \"Group\", group_col2 = \"Treatment\",            roc = TRUE) #> [1] \"Results based on log2 transformation:\" #> [1] \"CD3/CD28 LOOCV Accuracy: 49%\" #> [1] \"CD3/CD28 LOOCV Accuracy (VIP>1): 52%\" #> [1] \"LPS LOOCV Accuracy: 44%\" #> [1] \"LPS LOOCV Accuracy (VIP>1): 44%\" #> [1] \"Unstimulated LOOCV Accuracy: 34%\" #> [1] \"Unstimulated LOOCV Accuracy (VIP>1): 42%\" #> Overall Confusion Matrix for PLS-DA Comparison #>           Reference #> Prediction ND PreT2D T2D #>     ND      6      4   6 #>     PreT2D 13     27   9 #>     T2D    14      2  18 #> Accuracy: 0.52  #>  #> Per-Class Sensitivity: #>     Class: ND Class: PreT2D    Class: T2D  #>          0.18          0.82          0.55  #>  #> Per-Class Specificity: #>     Class: ND Class: PreT2D    Class: T2D  #>          0.85          0.67          0.76  #>  #> Macro-Averaged Sensitivity: 0.52  #> Macro-Averaged Specificity: 0.76  #> Overall Confusion Matrix for PLS-DA Comparison with VIP Score > 1 #>           Reference #> Prediction ND PreT2D T2D #>     ND      8      4   7 #>     PreT2D 12     22   5 #>     T2D    13      7  21 #> Accuracy: 0.52  #>  #> Per-Class Sensitivity: #>     Class: ND Class: PreT2D    Class: T2D  #>          0.24          0.67          0.64  #>  #> Per-Class Specificity: #>     Class: ND Class: PreT2D    Class: T2D  #>          0.83          0.74          0.70  #>  #> Macro-Averaged Sensitivity: 0.52  #> Macro-Averaged Specificity: 0.76 #> agg_png  #>       2"},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"principal-component-analysis-pca","dir":"Articles","previous_headings":"CytoProfile","what":"7. Principal Component Analysis (PCA)","title":"Getting Started with CytoProfile","text":"","code":"data <- ExampleData1[, -c(3,23)] data_df <- filter(data, Group != \"ND\" & Treatment != \"Unstimulated\") cyt_pca(data_df,          pdf_title = \"example_pca_analysis.pdf\",          colors = c(\"black\", \"red2\"),          scale = \"log2\",          comp_num = 3, pch_values = c(16, 4),          style = \"3D\", group_col = \"Group\", group_col2 = \"Treatment\") #> [1] \"Results based on log2 transformation:\" #> agg_png  #>       2 cyt_pca(data_df,          pdf_title = \"example_pca_analysis_2.pdf\",          colors = c(\"black\", \"red2\"),          scale = \"log2\",          comp_num = 2, pch_values = c(16, 4),          group_col = \"Group\") #> [1] \"Results based on log2 transformation:\" #> agg_png  #>       2"},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"volcano-plot","dir":"Articles","previous_headings":"CytoProfile","what":"8. Volcano Plot","title":"Getting Started with CytoProfile","text":"","code":"# Generating Volcano Plot data_df <- ExampleData1[, -c(2:3)] volc_plot <- cyt_volc(data_df, group_col = \"Group\",                        cond1 = \"T2D\", cond2 = \"ND\",                        fold_change_thresh = 2.0,                        top_labels = 15) #>                    cytokine      fc_log      p_log significant #> IL.12.P70         IL.12.P70 -2.60117683 2.18641971        TRUE #> IL.6                   IL.6 -0.95013174 3.94758527       FALSE #> IL.27                 IL.27 -0.67878724 2.33099419       FALSE #> IL.23                 IL.23 -0.87320747 1.95290632       FALSE #> CCL.20.MIP.3A CCL.20.MIP.3A -0.48569948 1.40917287       FALSE #> IL.2                   IL.2 -0.80577278 1.22848122       FALSE #> IL.17F               IL.17F -0.93024059 1.16938373       FALSE #> IL.10                 IL.10 -0.48121242 1.01734902       FALSE #> IL.28A               IL.28A -0.31081278 0.98351262       FALSE #> IL.17A               IL.17A -0.80415853 0.90173665       FALSE #> IL.1B                 IL.1B -0.61564856 0.83381951       FALSE #> GM.CSF               GM.CSF  0.45980342 0.62042612       FALSE #> IL.21                 IL.21 -0.62254771 0.51843946       FALSE #> IL.17E.IL.25   IL.17E.IL.25  0.01449957 0.49515782       FALSE #> IL.22                 IL.22 -0.30363695 0.47550506       FALSE #> IL.9                   IL.9 -0.32752255 0.43117675       FALSE #> TNF.A                 TNF.A -0.15647551 0.21142412       FALSE #> IL.31                 IL.31  0.21056699 0.20929529       FALSE #> IL.4                   IL.4  0.21161574 0.20542291       FALSE #> IL.5                   IL.5 -0.20808037 0.17512546       FALSE #> IL.15                 IL.15 -0.05298748 0.12055764       FALSE #> IL.13                 IL.13 -0.07717527 0.06654004       FALSE #> IFN.G                 IFN.G -0.09088794 0.06221451       FALSE #> TNF.B                 TNF.B  0.07037796 0.05224667       FALSE #> IL.33                 IL.33  0.01213249 0.01719622       FALSE ggsave(\"volcano_plot.png\", plot = volc_plot$`T2D vs ND`,         dpi = 300) # Print the final plot data (excluding the label column) print(volc_plot$`T2D vs ND`$data) #>                    cytokine      fc_log      p_log significant         label #> IL.12.P70         IL.12.P70 -2.60117683 2.18641971        TRUE     IL.12.P70 #> IL.6                   IL.6 -0.95013174 3.94758527       FALSE          IL.6 #> IL.27                 IL.27 -0.67878724 2.33099419       FALSE         IL.27 #> IL.23                 IL.23 -0.87320747 1.95290632       FALSE         IL.23 #> CCL.20.MIP.3A CCL.20.MIP.3A -0.48569948 1.40917287       FALSE CCL.20.MIP.3A #> IL.2                   IL.2 -0.80577278 1.22848122       FALSE          IL.2 #> IL.17F               IL.17F -0.93024059 1.16938373       FALSE        IL.17F #> IL.10                 IL.10 -0.48121242 1.01734902       FALSE         IL.10 #> IL.28A               IL.28A -0.31081278 0.98351262       FALSE        IL.28A #> IL.17A               IL.17A -0.80415853 0.90173665       FALSE        IL.17A #> IL.1B                 IL.1B -0.61564856 0.83381951       FALSE         IL.1B #> GM.CSF               GM.CSF  0.45980342 0.62042612       FALSE        GM.CSF #> IL.21                 IL.21 -0.62254771 0.51843946       FALSE         IL.21 #> IL.17E.IL.25   IL.17E.IL.25  0.01449957 0.49515782       FALSE  IL.17E.IL.25 #> IL.22                 IL.22 -0.30363695 0.47550506       FALSE         IL.22 #> IL.9                   IL.9 -0.32752255 0.43117675       FALSE               #> TNF.A                 TNF.A -0.15647551 0.21142412       FALSE               #> IL.31                 IL.31  0.21056699 0.20929529       FALSE               #> IL.4                   IL.4  0.21161574 0.20542291       FALSE               #> IL.5                   IL.5 -0.20808037 0.17512546       FALSE               #> IL.15                 IL.15 -0.05298748 0.12055764       FALSE               #> IL.13                 IL.13 -0.07717527 0.06654004       FALSE               #> IFN.G                 IFN.G -0.09088794 0.06221451       FALSE               #> TNF.B                 TNF.B  0.07037796 0.05224667       FALSE               #> IL.33                 IL.33  0.01213249 0.01719622       FALSE"},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"heatmap","dir":"Articles","previous_headings":"CytoProfile","what":"9. Heatmap","title":"Getting Started with CytoProfile","text":"","code":"# Generating Heat map cyt_heatmap(data = data_df,             scale = \"log2\",        # Optional scaling             annotation_col_name = \"Group\",             title = \"heatmap.png\") #> agg_png  #>       2"},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"dual-flashlight-plot","dir":"Articles","previous_headings":"CytoProfile","what":"10. Dual Flashlight Plot","title":"Getting Started with CytoProfile","text":"","code":"# Generating dual flashlights plot data_df <- ExampleData1[, -c(2:3)] dfp <- cyt_dualflashplot(data_df, group_var = \"Group\",                           group1 = \"T2D\", group2 = \"ND\",                           ssmd_thresh = -0.2, log2fc_thresh = 1,                           top_labels = 10) #> # A tibble: 25 × 11 #>    cytokine         mean_ND mean_PreT2D   mean_T2D variance_ND variance_PreT2D #>    <chr>              <dbl>       <dbl>      <dbl>       <dbl>           <dbl> #>  1 CCL.20.MIP.3A   634.        404.       887.        6.72e+ 5         2.74e+5 #>  2 GM.CSF            2.65        3.11       1.92      2.63e+ 1         3.14e+1 #>  3 IFN.G         57730.      18303.     61484.        2.86e+10         2.30e+9 #>  4 IL.10           979.        836.      1366.        1.99e+ 6         1.19e+6 #>  5 IL.12.P70        13.0        39.1       78.9       4.15e+ 2         2.56e+4 #>  6 IL.13          1064.       1543.      1122.        5.60e+ 6         1.11e+7 #>  7 IL.15             7.92        4.29       8.22      3.54e+ 1         2.58e+1 #>  8 IL.17A          352.        653.       615.        9.40e+ 5         2.88e+6 #>  9 IL.17E.IL.25      0.0101      0.0163     0.01      1.01e- 6         3.88e-3 #> 10 IL.17F            1.63        2.35       3.11      1.56e+ 1         3.37e+1 #> 11 IL.1B          2806.       2977.      4299.        6.63e+ 7         3.76e+7 #> 12 IL.2           9227.      10718.     16129.        2.60e+ 8         4.10e+8 #> 13 IL.21           205.        210.       316.        3.15e+ 5         2.49e+5 #> 14 IL.22             0.0513      0.0684     0.0633    4.58e- 3         4.51e-3 #> 15 IL.23             0.147       0.243      0.269     3.13e- 2         9.37e-2 #> 16 IL.27             0.0662      0.0834     0.106     6.18e- 3         5.66e-3 #> 17 IL.28A            0.0537      0.0710     0.0666    2.45e- 3         5.10e-3 #> 18 IL.31             0.0409      0.0905     0.0354    6.62e- 3         4.88e-2 #> 19 IL.33             1.17        1.43       1.16      2.09e+ 0         2.71e+0 #> 20 IL.4              0.344       0.707      0.297     4.24e- 1         2.96e+0 #> 21 IL.5            134.        340.       155.        1.09e+ 5         9.88e+5 #> 22 IL.6           4620.       5197.      8925.        2.86e+ 7         5.72e+7 #> 23 IL.9            203.        256.       254.        1.34e+ 5         2.11e+5 #> 24 TNF.A          5046.       3069.      5624.        7.02e+ 7         1.63e+7 #> 25 TNF.B             0.641       0.709      0.610     2.37e+ 0         2.76e+0 #> # ℹ 5 more variables: variance_T2D <dbl>, ssmd <dbl>, log2FC <dbl>, #> #   SSMD_Category <chr>, Significant <lgl> ggsave(\"dual_flashlight_plot.png\", plot = dfp$plot_env$p, dpi = 300,         width = 3000, height = 2000, units = \"px\") # Print the table data used for plotting print(dfp$data) #> # A tibble: 25 × 11 #>    cytokine         mean_ND mean_PreT2D mean_T2D variance_ND variance_PreT2D #>    <chr>              <dbl>       <dbl>    <dbl>       <dbl>           <dbl> #>  1 CCL.20.MIP.3A   634.        404.       887.      6.72e+ 5         2.74e+5 #>  2 GM.CSF            2.65        3.11       1.92    2.63e+ 1         3.14e+1 #>  3 IFN.G         57730.      18303.     61484.      2.86e+10         2.30e+9 #>  4 IL.10           979.        836.      1366.      1.99e+ 6         1.19e+6 #>  5 IL.12.P70        13.0        39.1       78.9     4.15e+ 2         2.56e+4 #>  6 IL.13          1064.       1543.      1122.      5.60e+ 6         1.11e+7 #>  7 IL.15             7.92        4.29       8.22    3.54e+ 1         2.58e+1 #>  8 IL.17A          352.        653.       615.      9.40e+ 5         2.88e+6 #>  9 IL.17E.IL.25      0.0101      0.0163     0.01    1.01e- 6         3.88e-3 #> 10 IL.17F            1.63        2.35       3.11    1.56e+ 1         3.37e+1 #> # ℹ 15 more rows #> # ℹ 5 more variables: variance_T2D <dbl>, ssmd <dbl>, log2FC <dbl>, #> #   SSMD_Category <chr>, Significant <lgl>"},{"path":[]},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"using-xgboost-for-classification","dir":"Articles","previous_headings":"CytoProfile > 11. Machine Learning Models","what":"Using XGBoost for classification","title":"Getting Started with CytoProfile","text":"","code":"# Using XGBoost for classification data_df0 <- ExampleData1 data_df <- data.frame(data_df0[, 1:3], log2(data_df0[, -c(1:3)])) data_df <- data_df[, -c(2:3)] data_df <- filter(data_df, Group != \"ND\")  xgb_results <- cyt_xgb(data = data_df, group_col = \"Group\",                        nrounds = 500, max_depth = 4, eta = 0.05,                        nfold = 5, cv = TRUE, eval_metric = \"mlogloss\",                        early_stopping_rounds = NULL, top_n_features = 10,                        verbose = 0, plot_roc = TRUE) #>  #> ### Group to Numeric Label Mapping ### #> PreT2D    T2D  #>      0      1  #>  #> ### TRAINING XGBOOST MODEL ### #>  #> Best iteration from training (based on mlogloss ): #>     iter train_mlogloss test_mlogloss #>    <num>          <num>         <num> #> 1:   313     0.01860717     0.4529601 #>  #> AUC:  0.9155767 #>  #> ### Confusion Matrix on Test Set ### #> Confusion Matrix and Statistics #>  #>           Reference #> Prediction  0  1 #>          0 25  7 #>          1  4 22 #>                                            #>                Accuracy : 0.8103           #>                  95% CI : (0.6859, 0.9013) #>     No Information Rate : 0.5              #>     P-Value [Acc > NIR] : 1.016e-06        #>                                            #>                   Kappa : 0.6207           #>                                            #>  Mcnemar's Test P-Value : 0.5465           #>                                            #>             Sensitivity : 0.8621           #>             Specificity : 0.7586           #>          Pos Pred Value : 0.7812           #>          Neg Pred Value : 0.8462           #>              Prevalence : 0.5000           #>          Detection Rate : 0.4310           #>    Detection Prevalence : 0.5517           #>       Balanced Accuracy : 0.8103           #>                                            #>        'Positive' Class : 0                #>                                            #>  #> ### Top 10 Important Features ### #>           Feature       Gain      Cover  Frequency #>            <char>      <num>      <num>      <num> #>  1:         TNF.A 0.18457678 0.10535233 0.09103448 #>  2:         IL.22 0.15117263 0.16064281 0.09885057 #>  3:     IL.12.P70 0.09955532 0.12855158 0.12321839 #>  4:         IL.33 0.09384522 0.08514973 0.07908046 #>  5:         IL.1B 0.07717208 0.03835908 0.05149425 #>  6:          IL.9 0.07554566 0.06955229 0.07080460 #>  7:         IL.15 0.04705740 0.05853239 0.03310345 #>  8:         IL.23 0.04440949 0.02533791 0.02988506 #>  9: CCL.20.MIP.3A 0.03678675 0.05623800 0.05287356 #> 10:         IL.13 0.02785650 0.02633047 0.03678161 #>  #> ### CROSS-VALIDATION USING XGBOOST ### #>  #> Best iteration from cross-validation: #>     iter train_mlogloss_mean train_mlogloss_std test_mlogloss_mean #>    <num>               <num>              <num>              <num> #> 1:    45           0.1664957         0.01796909           0.457419 #>    test_mlogloss_std #>                <num> #> 1:        0.08743712 #> Confusion Matrix and Statistics #>  #>           Reference #> Prediction  0  1 #>          0 57 13 #>          1 13 57 #>                                           #>                Accuracy : 0.8143          #>                  95% CI : (0.7398, 0.875) #>     No Information Rate : 0.5             #>     P-Value [Acc > NIR] : 1.212e-14       #>                                           #>                   Kappa : 0.6286          #>                                           #>  Mcnemar's Test P-Value : 1               #>                                           #>             Sensitivity : 0.8143          #>             Specificity : 0.8143          #>          Pos Pred Value : 0.8143          #>          Neg Pred Value : 0.8143          #>              Prevalence : 0.5000          #>          Detection Rate : 0.4071          #>    Detection Prevalence : 0.5000          #>       Balanced Accuracy : 0.8143          #>                                           #>        'Positive' Class : 0               #>                                           #>  #> Cross-Validation Accuracy:  0.8142857"},{"path":"https://saraswatsh.github.io/CytoProfile/articles/getting_started.html","id":"using-random-forest-for-classification","dir":"Articles","previous_headings":"CytoProfile > 11. Machine Learning Models","what":"Using Random Forest for classification","title":"Getting Started with CytoProfile","text":"","code":"# Using Random Forest for classification rf_results <- cyt_rf(data = data_df, group_col = \"Group\", k_folds = 5,                      ntree = 1000, mtry = 4, run_rfcv = TRUE,                      plot_roc = TRUE) #>  #> ### RANDOM FOREST RESULTS ON TRAINING SET ### #>  #> Call: #>  randomForest(formula = formula_rf, data = train_data, ntree = ntree,      mtry = mtry, importance = TRUE)  #>                Type of random forest: classification #>                      Number of trees: 1000 #> No. of variables tried at each split: 4 #>  #>         OOB estimate of  error rate: 11.43% #> Confusion matrix: #>        PreT2D T2D class.error #> PreT2D     62   8   0.1142857 #> T2D         8  62   0.1142857 #>  #> Accuracy on training set:  0.8857143  #>  #> Class 'PreT2D' metrics: #>   Sensitivity:  0.886  #>   Specificity:  0.886  #>  #> Class 'T2D' metrics: #>   Sensitivity:  0.886  #>   Specificity:  0.886  #>  #> ### PREDICTIONS ON TEST SET ### #>           Reference #> Prediction PreT2D T2D #>     PreT2D     25   7 #>     T2D         4  22 #>  #> Accuracy on test set:  0.8103448  #>  #> Sensitivity by class: #> Class: PreT2D: 0.862 #> Class: T2D: 0.241 #>  #> Specificity by class: #> Class: T2D: 0.759 #> Class: PreT2D: 0.138 #>  #> AUC:  0.9298454 #>  #> ### RANDOM FOREST CROSS-VALIDATION FOR FEATURE SELECTION ### #> Random Forest CV completed for feature selection. #>         Check the plot for error vs. number of variables."},{"path":"https://saraswatsh.github.io/CytoProfile/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shubh Saraswat. Maintainer, author, copyright holder. Xiaohua Douglas Zhang. Author.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Saraswat S, Zhang X (2025). CytoProfile: Cytokine Profiling Analysis Tool. R package version 0.0.0.9000, https://saraswatsh.github.io/CytoProfile/, https://github.com/saraswatsh/CytoProfile.","code":"@Manual{,   title = {CytoProfile: Cytokine Profiling Analysis Tool},   author = {Shubh Saraswat and Xiaohua Douglas Zhang},   year = {2025},   note = {R package version 0.0.0.9000, https://saraswatsh.github.io/CytoProfile/},   url = {https://github.com/saraswatsh/CytoProfile}, }"},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"welcome-to-cytoprofile","dir":"","previous_headings":"","what":"Welcome to CytoProfile","title":"Welcome to CytoProfile","text":"CytoProfile R package designed advanced cytokine data analysis. provides comprehensive suite functions exploratory, univariate, multivariate analysis well machine learning methods tailored cytokine datasets.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"Welcome to CytoProfile","text":"Exploratory Analysis: Quickly generate enriched bar plots, boxplots, summary statistics assess data. Statistical Testing: Perform t-tests, ANOVA, univariate methods ease. Multivariate Analysis: Utilize PCA, PLS-DA, techniques deeper insights. Machine Learning: Integrate Random Forest XGBoost models predictive analysis. Data Handling: Seamlessly load preprocess cytokine data efficient analysis. can install development version CytoProfile GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"saraswatsh/CytoProfile\")"},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"learn-more","dir":"","previous_headings":"","what":"Learn More","title":"Welcome to CytoProfile","text":"Getting Started: detailed tutorial help start using CytoProfile. Function Reference: Complete documentation functions. GitHub Repository: Access source code contribute.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/CytoProfile-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CytoProfile: Cytokine Profiling Analysis Tool — CytoProfile-package","title":"CytoProfile: Cytokine Profiling Analysis Tool — CytoProfile-package","text":"Provides comprehensive cytokine profiling analysis quality control using biologically meaningful cutoffs raw cytokine measurements testing distributional symmetry recommend appropriate transformations. Offers exploratory data analysis summary statistics, enhanced boxplots, barplots, along univariate multivariate analytical capabilities -depth cytokine profiling PCA, sPLS-DA, Random Forest XGBoost.","code":""},{"path":[]},{"path":"https://saraswatsh.github.io/CytoProfile/reference/CytoProfile-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CytoProfile: Cytokine Profiling Analysis Tool — CytoProfile-package","text":"Maintainer: Shubh Saraswat shubh.saraswat00@gmail.com (ORCID) [copyright holder] Authors: Xiaohua Douglas Zhang douglas.zhang@uky.edu (ORCID)","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData1.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Cytokine Profiling Data 1. — ExampleData1","title":"Example Cytokine Profiling Data 1. — ExampleData1","text":"Contains observed concentrations cytokines respective treatment groups, derived :","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Cytokine Profiling Data 1. — ExampleData1","text":"","code":"ExampleData1"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Cytokine Profiling Data 1. — ExampleData1","text":"data frame 297 rows 29 columns: Group Group assigned subjects. Treatment Treatment received subjects. Time Time point measurement. IL.17F Observed concentration IL.17F cytokine. GM.CSF Observed concentration GM.CSF cytokine. IFN.G Observed concentration IFN.G cytokine. IL.10 Observed concentration IL.10 cytokine. CCL.20.MIP.3A Observed concentration CCL.20.MIP.3A cytokine. IL.12.P70 Observed concentration IL.12.P70 cytokine. IL.13 Observed concentration IL.13 cytokine. IL.15 Observed concentration IL.15 cytokine. IL.17A Observed concentration IL.17A cytokine. IL.22 Observed concentration IL.22 cytokine. IL.9 Observed concentration IL.9 cytokine. IL.1B Observed concentration IL.1B cytokine. IL.33 Observed concentration IL.33 cytokine. IL.2 Observed concentration IL.2 cytokine. IL.21 Observed concentration IL.21 cytokine. IL.4 Observed concentration IL.4 cytokine. IL.23 Observed concentration IL.23 cytokine. IL.5 Observed concentration IL.5 cytokine. IL.6 Observed concentration IL.6 cytokine. IL.17E.IL.25 Observed concentration IL.17E.IL.25 cytokine. IL.27 Observed concentration IL.27 cytokine. IL.31 Observed concentration IL.31 cytokine. TNF.Observed concentration TNF.cytokine. TNF.B Observed concentration TNF.B cytokine. IL.28A Observed concentration IL.28A cytokine.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Cytokine Profiling Data 1. — ExampleData1","text":"Example data compiled cytokine profiling.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example Cytokine Profiling Data 1. — ExampleData1","text":"Pugh GH, Fouladvand S, SantaCruz-Calvo S, Agrawal M, Zhang XD, Chen J, Kern PA, Nikolajczyk BS. T cells dominate peripheral inflammation cross-sectional analysis obesity-associated diabetes. Obesity (Silver Spring). 2022;30(10): 1983–1994. doi:10.1002/oby.23528.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Cytokine Profiling Data 1. — ExampleData1","text":"","code":"data(ExampleData1)"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData2.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Cytokine Profiling Data 2. — ExampleData2","title":"Example Cytokine Profiling Data 2. — ExampleData2","text":"Contains observed concentrations cytokines respective treatment groups, derived :","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Cytokine Profiling Data 2. — ExampleData2","text":"","code":"ExampleData2"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Cytokine Profiling Data 2. — ExampleData2","text":"data frame 66 rows 20 columns: Stimulation Stimulation assigned subjects. Group Group assigned subjects. IL.17F Observed concentration IL.17F cytokine. GM.CSF Observed concentration GM.CSF cytokine. IFN.G Observed concentration IFN.G cytokine. IL.10 Observed concentration IL.10 cytokine. CCL.20 Observed concentration CCL.20 cytokine. IL.12 Observed concentration IL.12 cytokine. IL.13 Observed concentration IL.13 cytokine. IL.17A Observed concentration IL.17A cytokine. IL.22 Observed concentration IL.22 cytokine. IL.9 Observed concentration IL.9 cytokine. IL.1B Observed concentration IL.1B cytokine. IL.2 Observed concentration IL.2 cytokine. IL.21 Observed concentration IL.21 cytokine. IL.4 Observed concentration IL.4 cytokine. IL.5 Observed concentration IL.5 cytokine. IL.6 Observed concentration IL.6 cytokine. TNF.Observed concentration TNF.cytokine. TNF.B Observed concentration TNF.B cytokine.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Cytokine Profiling Data 2. — ExampleData2","text":"Example data compiled cytokine profiling.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example Cytokine Profiling Data 2. — ExampleData2","text":"SantaCruz-Calvo S, Saraswat S, Hasturk H, Dawson DR, Zhang XD, Nikolajczyk BS. Periodontitis Diabetes Differentially Affect Inflammation Obesity. J Dent Res. 2024;103(12):1313-1322. doi:10.1177/00220345241280743","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Cytokine Profiling Data 2. — ExampleData2","text":"","code":"data(ExampleData2)"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData3.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Cytokine Profiling Data 3. — ExampleData3","title":"Example Cytokine Profiling Data 3. — ExampleData3","text":"Contains observed concentrations cytokines respective treatment groups, derived :","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Cytokine Profiling Data 3. — ExampleData3","text":"","code":"ExampleData3"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Cytokine Profiling Data 3. — ExampleData3","text":"data frame 64 rows 14 columns: Stimulation Stimulation assigned subjects. Group Group assigned subjects. GM.CSF Observed concentration GM.CSF cytokine. IFN.G Observed concentration IFN.G cytokine. IL.10 Observed concentration IL.10 cytokine. CCL.20.MIP.3A Observed concentration CCL.20.MIP.3A cytokine. IL.12.P70 Observed concentration IL.12.P70 cytokine. IL.13 Observed concentration IL.13 cytokine. IL.15 Observed concentration IL.15 cytokine. IL.9 Observed concentration IL.9 cytokine. IL.1B Observed concentration IL.1B cytokine. IL.21 Observed concentration IL.21 cytokine. IL.6 Observed concentration IL.6 cytokine. TNF.Observed concentration TNF.cytokine.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Cytokine Profiling Data 3. — ExampleData3","text":"Example data compiled cytokine profiling.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example Cytokine Profiling Data 3. — ExampleData3","text":"SantaCruz-Calvo S, Saraswat S, Hasturk H, Dawson DR, Zhang XD, Nikolajczyk BS. Periodontitis Diabetes Differentially Affect Inflammation Obesity. J Dent Res. 2024;103(12):1313-1322. doi:10.1177/00220345241280743","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/ExampleData3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Cytokine Profiling Data 3. — ExampleData3","text":"","code":"data(ExampleData3)"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_anova.html","id":null,"dir":"Reference","previous_headings":"","what":"ANOVA Analysis on Continuous Variables. — cyt_anova","title":"ANOVA Analysis on Continuous Variables. — cyt_anova","text":"function performs analysis variance (ANOVA) continuous variable every categorical predictor input data. Character columns automatically converted factors; factor columns used predictors numeric columns used continuous outcomes. valid predictor (.e., one level 10 levels), Tukey's Honest Significant Difference (HSD) test conducted adjusted p-values pairwise comparisons extracted.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_anova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ANOVA Analysis on Continuous Variables. — cyt_anova","text":"","code":"cyt_anova(data)"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_anova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ANOVA Analysis on Continuous Variables. — cyt_anova","text":"data data frame matrix containing categorical continuous variables. Character columns converted factors used predictors, numeric columns used continuous outcomes.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_anova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ANOVA Analysis on Continuous Variables. — cyt_anova","text":"list adjusted p-values Tukey's HSD tests combination continuous outcome categorical predictor. List elements named format \"outcome_predictor\".","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_anova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ANOVA Analysis on Continuous Variables. — cyt_anova","text":"","code":"# Loading data data(\"ExampleData1\") # Perform ANOVA on selected columns of the cytodata dataset anova_results <- cyt_anova(ExampleData1[, c(1:2, 5:6)]) print(anova_results) #> $GM.CSF_Group #>  PreT2D-ND     T2D-ND T2D-PreT2D  #>  0.7730980  0.5373287  0.1893654  #>  #> $IFN.G_Group #>  PreT2D-ND     T2D-ND T2D-PreT2D  #> 0.08833557 0.97787433 0.05495262  #>  #> $GM.CSF_Treatment #>          LPS-CD3/CD28 Unstimulated-CD3/CD28      Unstimulated-LPS  #>          7.183143e-13          6.974421e-13          3.481621e-01  #>  #> $IFN.G_Treatment #>          LPS-CD3/CD28 Unstimulated-CD3/CD28      Unstimulated-LPS  #>          7.445156e-13          7.394085e-13          9.987624e-01  #>"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_bp.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxtplots for Overall Comparisons by Continous Variables. — cyt_bp","title":"Boxtplots for Overall Comparisons by Continous Variables. — cyt_bp","text":"function creates PDF file containing box plots continuous variables provided data. number columns data exceeds bin.size, function splits plots across multiple pages.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_bp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxtplots for Overall Comparisons by Continous Variables. — cyt_bp","text":"","code":"cyt_bp(data, pdf_title, bin_size = 25, mf_row = c(1, 1), y_lim = NULL)"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_bp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxtplots for Overall Comparisons by Continous Variables. — cyt_bp","text":"data matrix data frame containing raw data plotted. pdf_title string representing name PDF file created. bin_size integer specifying maximum number box plots display single page. mf_row numeric vector length two specifying layout (rows columns) plots page. y_lim optional numeric vector defining y-axis limits plots.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_bp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boxtplots for Overall Comparisons by Continous Variables. — cyt_bp","text":"PDF file containing box plots continuous variables.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_bp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boxtplots for Overall Comparisons by Continous Variables. — cyt_bp","text":"","code":"# Loading data data.df <- ExampleData1 # Generate box plots for log2-transformed values to check for outliers: cyt_bp(log2(data.df[, -c(1:3)]), pdf_title = \"boxplot_by_cytokine_log2.pdf\") #> pdf  #>   2"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_bp2.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplot Function Enhanced for Specific Group Comparisons. — cyt_bp2","title":"Boxplot Function Enhanced for Specific Group Comparisons. — cyt_bp2","text":"function generates PDF file containing boxplots combination numeric factor variables provided data. first converts character columns factors checks data contains least one numeric one factor column. scale argument set \"log2\", numeric columns log2-transformed. function creates boxplots using ggplot2 numeric variable grouped factor variable.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_bp2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxplot Function Enhanced for Specific Group Comparisons. — cyt_bp2","text":"","code":"cyt_bp2(data, pdf_title, mf_row = c(1, 1), scale = NULL, y_lim = NULL)"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_bp2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplot Function Enhanced for Specific Group Comparisons. — cyt_bp2","text":"data matrix data frame raw data. pdf_title string representing title (filename) PDF file. mf_row numeric vector length two specifying layout (rows columns) plots page. Defaults c(1, 1). scale Transformation option continuous variables. Options NULL (default) \"log2\". set \"log2\", numeric columns transformed using log2 function. y_lim optional numeric vector defining y-axis l imits plots.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_bp2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boxplot Function Enhanced for Specific Group Comparisons. — cyt_bp2","text":"PDF file containing boxplots.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_bp2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boxplot Function Enhanced for Specific Group Comparisons. — cyt_bp2","text":"","code":"# Loading data data_df <- ExampleData1[, -c(3, 4:27)] data_df <- dplyr::filter(data_df, Group == \"T2D\", Treatment == \"Unstimulated\") cyt_bp2(data_df, pdf_title = \"boxplot2_test2.pdf\", scale = \"log2\") #> pdf  #>   2"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_dualflashplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Dual-flashlight Plot. — cyt_dualflashplot","title":"Dual-flashlight Plot. — cyt_dualflashplot","text":"function reshapes input data computes summary statistics (mean variance) variable grouped specified factor column. calculates SSMD (Strictly Standardized Mean Difference) log2 fold change two groups (group1 group2) categorizes effect strength \"Strong Effect\", \"Moderate Effect\", \"Weak Effect\". dual flash plot generated using ggplot2 x-axis represents average log2 fold change y-axis represents SSMD. Additionally, function prints computed statistics console.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_dualflashplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dual-flashlight Plot. — cyt_dualflashplot","text":"","code":"cyt_dualflashplot(   data,   group_var,   group1,   group2,   ssmd_thresh = 1,   log2fc_thresh = 1,   top_labels = 15 )"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_dualflashplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dual-flashlight Plot. — cyt_dualflashplot","text":"data data frame containing input data. group_var string specifying name grouping column data. group1 string representing name first group comparison. group2 string representing name second group comparison. ssmd_thresh numeric threshold SSMD value used determine significance. Default 1. log2fc_thresh numeric threshold log2 fold change used determine significance. Default 1. top_labels integer specifying number top variables (based absolute SSMD) label plot. Default 15.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_dualflashplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dual-flashlight Plot. — cyt_dualflashplot","text":"ggplot object representing dual flash plot comparisons group1 group2.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_dualflashplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dual-flashlight Plot. — cyt_dualflashplot","text":"","code":"# Loading data data_df <- ExampleData1[, -c(2:3)]  dfp <- cyt_dualflashplot(   data_df,   group_var = \"Group\",   group1 = \"T2D\",   group2 = \"ND\",   ssmd_thresh = -0.2,   log2fc_thresh = 1,   top_labels = 10 ) #> Warning: `...` must be empty in `format.tbl()` #> Caused by error in `format_tbl()`: #> ! `...` must be empty. #> ✖ Problematic arguments: #> • na.print = \"\" #> • quote = FALSE #> # A tibble: 25 × 11 #>    cytokine         mean_ND mean_PreT2D   mean_T2D variance_ND variance_PreT2D #>    <chr>              <dbl>       <dbl>      <dbl>       <dbl>           <dbl> #>  1 CCL.20.MIP.3A   634.        404.       887.        6.72e+ 5         2.74e+5 #>  2 GM.CSF            2.65        3.11       1.92      2.63e+ 1         3.14e+1 #>  3 IFN.G         57730.      18303.     61484.        2.86e+10         2.30e+9 #>  4 IL.10           979.        836.      1366.        1.99e+ 6         1.19e+6 #>  5 IL.12.P70        13.0        39.1       78.9       4.15e+ 2         2.56e+4 #>  6 IL.13          1064.       1543.      1122.        5.60e+ 6         1.11e+7 #>  7 IL.15             7.92        4.29       8.22      3.54e+ 1         2.58e+1 #>  8 IL.17A          352.        653.       615.        9.40e+ 5         2.88e+6 #>  9 IL.17E.IL.25      0.0101      0.0163     0.01      1.01e- 6         3.88e-3 #> 10 IL.17F            1.63        2.35       3.11      1.56e+ 1         3.37e+1 #> 11 IL.1B          2806.       2977.      4299.        6.63e+ 7         3.76e+7 #> 12 IL.2           9227.      10718.     16129.        2.60e+ 8         4.10e+8 #> 13 IL.21           205.        210.       316.        3.15e+ 5         2.49e+5 #> 14 IL.22             0.0513      0.0684     0.0633    4.58e- 3         4.51e-3 #> 15 IL.23             0.147       0.243      0.269     3.13e- 2         9.37e-2 #> 16 IL.27             0.0662      0.0834     0.106     6.18e- 3         5.66e-3 #> 17 IL.28A            0.0537      0.0710     0.0666    2.45e- 3         5.10e-3 #> 18 IL.31             0.0409      0.0905     0.0354    6.62e- 3         4.88e-2 #> 19 IL.33             1.17        1.43       1.16      2.09e+ 0         2.71e+0 #> 20 IL.4              0.344       0.707      0.297     4.24e- 1         2.96e+0 #> 21 IL.5            134.        340.       155.        1.09e+ 5         9.88e+5 #> 22 IL.6           4620.       5197.      8925.        2.86e+ 7         5.72e+7 #> 23 IL.9            203.        256.       254.        1.34e+ 5         2.11e+5 #> 24 TNF.A          5046.       3069.      5624.        7.02e+ 7         1.63e+7 #> 25 TNF.B             0.641       0.709      0.610     2.37e+ 0         2.76e+0 #> # ℹ 5 more variables: variance_T2D <dbl>, ssmd <dbl>, log2FC <dbl>, #> #   SSMD_Category <chr>, Significant <lgl> print(dfp)"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_errbp.html","id":null,"dir":"Reference","previous_headings":"","what":"Error-bar Plot. — cyt_errbp","title":"Error-bar Plot. — cyt_errbp","text":"function draws error-bar plot comparing groups baseline group. creates barplot central tendency (mean median) overlays error bars representing spread (e.g., standard deviation, MAD, standard error). Optionally, p-value effect size labels (based SSMD) added, either symbols numeric values.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_errbp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error-bar Plot. — cyt_errbp","text":"","code":"cyt_errbp(   data,   p_lab = TRUE,   es_lab = TRUE,   class_symbol = TRUE,   x_lab = \"\",   y_lab = \"\",   main = \"\" )"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_errbp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error-bar Plot. — cyt_errbp","text":"data data frame containing following columns group: name: Group names. center: Mean median values. spread: Standard deviation, MAD, standard error. p.value: P-value comparison. effect.size: Effect size based SSMD. Note: first row data must correspond baseline group. p_lab Logical. Whether label p-values plot. Default TRUE. es_lab Logical. Whether label effect sizes plot. Default TRUE. class_symbol Logical. Whether use symbolic notation significance effect size. Default TRUE. x_lab Character. Label x-axis. y_lab Character. Label y-axis. main Character. Title graph.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_errbp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error-bar Plot. — cyt_errbp","text":"error-bar plot produced.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_errbp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Error-bar Plot. — cyt_errbp","text":"","code":"# Load sample data data_df <- ExampleData1[,-c(3)] cyt_mat <- log2(data_df[, -c(1:2)]) data_df1 <- data.frame(data_df[, 1:2], cyt_mat) cytokineNames <- colnames(cyt_mat) nCytokine <- length(cytokineNames) condt <- !is.na(cyt_mat) & (cyt_mat > 0) Cutoff <- min(cyt_mat[condt], na.rm = TRUE) / 10 # Create matrices for ANOVA and Tukey results p_aov_mat <- matrix(NA, nrow = nCytokine, ncol = 3) dimnames(p_aov_mat) <- list(cytokineNames,                          c(\"Group\", \"Treatment\", \"Interaction\")) p_groupComp_mat <- matrix(NA, nrow = nCytokine, ncol = 3) dimnames(p_groupComp_mat) <- list(cytokineNames,                                  c(\"2-1\", \"3-1\", \"3-2\")) ssmd_groupComp_stm_mat <- mD_groupComp_stm_mat <- p_groupComp_stm_mat <- p_groupComp_mat  for (i in 1:nCytokine) { Cytokine <- (cyt_mat[, i] + Cutoff) cytokine_aov <- aov(Cytokine ~ Group * Treatment, data = data_df) aov_table <- summary(cytokine_aov)[[1]] p_aov_mat[i, ] <- aov_table[1:3, 5] p_groupComp_mat[i, ] <- TukeyHSD(cytokine_aov)$Group[1:3, 4] p_groupComp_stm_mat[i, ] <- TukeyHSD(cytokine_aov)$`Group:Treatment`[1:3, 4] mD_groupComp_stm_mat[i, ] <- TukeyHSD(cytokine_aov)$`Group:Treatment`[1:3, 1] ssmd_groupComp_stm_mat[i, ] <- mD_groupComp_stm_mat[i, ] / sqrt(2 * aov_table[\"Residuals\", \"Mean Sq\"]) }  results <- cyt_skku(ExampleData1[, -c(3)], print_res_log = TRUE,                  group_cols = c(\"Group\", \"Treatment\")) pdf(\"bar_error_plot_enriched.pdf\") par(mfrow = c(2,3), mar = c(8.1, 4.1, 4.1, 2.1)) for (k in 1:nCytokine) { result_mat <- results[1:9, , k] center_df <- data.frame(  name = rownames(result_mat),  result_mat[, c(\"center\", \"spread\")],  p.value = c(1, p_groupComp_stm_mat[k, 1:2]),  effect.size = c(0, ssmd_groupComp_stm_mat[k, 1:2])  ) cyt_errbp(center_df, p_lab = TRUE, es_lab = TRUE,          class_symbol = TRUE,          y_lab = \"Concentration in log2 scale\",          main = cytokineNames[k]) } dev.off() #> pdf  #>   2"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heat Map. — cyt_heatmap","title":"Heat Map. — cyt_heatmap","text":"function creates heatmap using numeric columns provided data frame. requested via scale parameter, function applies log2 transformation data (non-positive values replaced NA). heatmap saved file, format determined file extension title.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heat Map. — cyt_heatmap","text":"","code":"cyt_heatmap(data, scale = NULL, annotation_col_name = NULL, title)"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heat Map. — cyt_heatmap","text":"data data frame containing input data. numeric columns used generate heatmap. scale Character. optional scaling option. set \"log2\", numeric data log2-transformed (non-positive values set NA). Default NULL. annotation_col_name Character. optional column name data used generating annotation colors. Default NULL. title Character. title heatmap file name saving plot. file extension (\".pdf\" \".png\") determines output format.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heat Map. — cyt_heatmap","text":"function return value. saves heatmap file.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heat Map. — cyt_heatmap","text":"","code":"# Load sample data data(\"ExampleData1\") data_df <- ExampleData1 # Generate a heatmap with log2 scaling and annotation based on # the \"Group\" column cyt_heatmap(   data = data_df[, -c(2:3)],   scale = \"log2\",  # Optional scaling   annotation_col_name = \"Group\",   title = \"Heatmap.png\" ) #> Warning: Non-numeric columns detected. Subsetting to #>             numeric columns only. #> pdf  #>   2"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Data with Principal Component Analysis (PCA) for Cytokines. — cyt_pca","title":"Analyze Data with Principal Component Analysis (PCA) for Cytokines. — cyt_pca","text":"function performs Principal Component Analysis (PCA) cytokine data generates several types plots, including: 2D PCA plots using mixOmics's plotIndiv function, 3D scatter plots (style \"3d\" \"3D\" comp_num 3) via plot3D package, Scree plots showing individual cumulative explained variance, Loadings plots, Biplots correlation circle plots. function optionally applies log2 transformation numeric data handles analyses based treatment groups.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Data with Principal Component Analysis (PCA) for Cytokines. — cyt_pca","text":"","code":"cyt_pca(   data,   group_col = NULL,   group_col2 = NULL,   colors = NULL,   pdf_title,   ellipse = FALSE,   comp_num = 2,   scale = NULL,   pch_values = NULL,   style = NULL )"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Data with Principal Component Analysis (PCA) for Cytokines. — cyt_pca","text":"data data frame containing cytokine data. include least one column representing grouping information optionally second column representing treatment stimulation. group_col Character. name column containing first grouping column specified group_col2 provided, second grouping column used grouping variable. group_col2 Character. name column containing second grouping column. specified group_col provided, first grouping column used. colors vector colors corresponding groups. set NULL, palette generated using rainbow() based number unique groups. pdf_title string specifying file name PDF PCA plots saved. ellipse Logical. TRUE, 95% confidence ellipse drawn PCA individuals plot. Default FALSE. comp_num Numeric. number principal components compute display. Default 2. scale Character. set \"log2\", log2 transformation applied numeric cytokine measurements (excluding grouping columns). Default NULL. pch_values vector plotting symbols (pch values) used PCA plots. Default NULL. style Character. set \"3d\" \"3D\" comp_num equals 3, 3D scatter plot generated using plot3D package. Default NULL.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Data with Principal Component Analysis (PCA) for Cytokines. — cyt_pca","text":"PDF file containing PCA plots generated saved.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Data with Principal Component Analysis (PCA) for Cytokines. — cyt_pca","text":"","code":"# Load sample data data(\"ExampleData1\") # Subset data to exclude columns 1, 4, and 24, then filter out rows # where Group is \"ND\" and Treatment is \"Unstimulated\" data_subset <- ExampleData1[, -c(3, 23)] data_df <- dplyr::filter(data_subset, Group != \"ND\" & Treatment != \"Unstimulated\") # Run PCA analysis and save plots to a PDF file cyt_pca(   data = data_df,   pdf_title = \"Example_PCA_Analysis.pdf\",   colors = c(\"black\", \"red2\"),   scale = \"log2\",   comp_num = 3,   pch_values = c(16, 4),   style = \"3D\",   group_col = \"Group\",   group_col2 = \"Treatment\",   ellipse = FALSE ) #> [1] \"Results based on log2 transformation:\" #> pdf  #>   2"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_rf.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Random Forest Classification on Cytokine Data, — cyt_rf","title":"Run Random Forest Classification on Cytokine Data, — cyt_rf","text":"function trains evaluates Random Forest classification model cytokine data. includes feature importance visualization, cross- validation feature selection, performance metrics accuracy, sensitivity, specificity. Optionally, binary classification, function also plots ROC curve computes AUC.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_rf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Random Forest Classification on Cytokine Data, — cyt_rf","text":"","code":"cyt_rf(   data,   group_col,   ntree = 500,   mtry = 5,   train_fraction = 0.7,   plot_roc = FALSE,   k_folds = 5,   step = 0.5,   run_rfcv = TRUE )"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_rf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Random Forest Classification on Cytokine Data, — cyt_rf","text":"data data frame containing cytokine data, one column grouping variable rest numerical features. group_col string representing name column grouping variable (target variable classification). ntree integer specifying number trees grow forest (default 500). mtry integer specifying number variables randomly selected split (default 5). train_fraction numeric value 0 1 representing proportion data use training (default 0.7). plot_roc logical value indicating whether plot ROC curve compute AUC binary classification (default FALSE). k_folds integer specifying number folds cross-validation (default 5). step numeric value specifying fraction variables remove step cross-validation feature selection (default 0.5). run_rfcv logical value indicating whether run Random Forest cross-validation feature selection (default TRUE).","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_rf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Random Forest Classification on Cytokine Data, — cyt_rf","text":"list containing: model trained Random Forest model. confusion_matrix confusion matrix test set predictions. importance_plot ggplot object showing variable importance plot based Mean Decrease Gini. rfcv_result Results Random Forest cross-validation feature selection (run_rfcv TRUE). importance_data data frame containing variable importance based Gini index.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_rf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Random Forest Classification on Cytokine Data, — cyt_rf","text":"function fits Random Forest model provided data splitting training test sets. calculates performance metrics accuracy, sensitivity, specificity sets. binary classification, can also plot ROC curve compute AUC. run_rfcv TRUE, cross-validation performed select optimal number features.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_rf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Random Forest Classification on Cytokine Data, — cyt_rf","text":"","code":"data.df0 <- ExampleData1 data.df <- data.frame(data.df0[, 1:3], log2(data.df0[, -c(1:3)])) data.df <- data.df[, -c(2:3)] data.df <- dplyr::filter(data.df, Group != \"ND\")  results <- cyt_rf(   data = data.df, group_col = \"Group\", k_folds = 5, ntree = 1000,   mtry = 4, run_rfcv = TRUE, plot_roc = TRUE ) #>  #> ### RANDOM FOREST RESULTS ON TRAINING SET ### #>  #> Call: #>  randomForest(formula = formula_rf, data = train_data, ntree = ntree,      mtry = mtry, importance = TRUE)  #>                Type of random forest: classification #>                      Number of trees: 1000 #> No. of variables tried at each split: 4 #>  #>         OOB estimate of  error rate: 11.43% #> Confusion matrix: #>        PreT2D T2D class.error #> PreT2D     62   8   0.1142857 #> T2D         8  62   0.1142857 #>  #> Accuracy on training set:  0.8857143  #>  #> Class 'PreT2D' metrics: #>   Sensitivity:  0.886  #>   Specificity:  0.886  #>  #> Class 'T2D' metrics: #>   Sensitivity:  0.886  #>   Specificity:  0.886  #>  #> ### PREDICTIONS ON TEST SET ### #>           Reference #> Prediction PreT2D T2D #>     PreT2D     25   7 #>     T2D         4  22 #>  #> Accuracy on test set:  0.8103448  #>  #> Sensitivity by class: #> Class: PreT2D: 0.862 #> Class: T2D: 0.241 #>  #> Specificity by class: #> Class: T2D: 0.759 #> Class: PreT2D: 0.138 #> Setting levels: control = PreT2D, case = T2D #> Setting direction: controls < cases #>  #> AUC:  0.9298454    #>  #> ### RANDOM FOREST CROSS-VALIDATION FOR FEATURE SELECTION ###  #> Random Forest CV completed for feature selection. #>         Check the plot for error vs. number of variables."},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_skku.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution of the Data Set Shown by Skewness and Kurtosis. — cyt_skku","title":"Distribution of the Data Set Shown by Skewness and Kurtosis. — cyt_skku","text":"function computes summary statistics — including sample size, mean, standard error, skewness, kurtosis — numeric measurement column data set. grouping columns provided via group_cols, function computes metrics separately group defined combination columns (using first element treatment variable second grouping variable, column one given). grouping columns provided, entire data set treated single group (\"Overall\"). log2 transformation (using cutoff equal one-tenth smallest positive value data) applied generate alternative metrics. Histograms showing distribution skewness kurtosis raw log2-transformed data generated saved PDF file name provided.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_skku.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution of the Data Set Shown by Skewness and Kurtosis. — cyt_skku","text":"","code":"cyt_skku(   data,   group_cols = NULL,   pdf_title = NULL,   print_res_raw = FALSE,   print_res_log = FALSE )"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_skku.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution of the Data Set Shown by Skewness and Kurtosis. — cyt_skku","text":"data matrix data frame containing raw data. group_cols specified, columns names group_cols treated grouping variables columns assumed numeric measurement variables. group_cols character vector specifying names grouping columns. provided, first element treated treatment variable second group variable. provided, entire data set treated one group. pdf_title character string specifying file name PDF file histograms saved. omitted, plots generated current graphics device. print_res_raw Logical. TRUE, function returns prints computed summary statistics raw data. Default FALSE. print_res_log Logical. TRUE, function returns prints computed summary statistics log2-transformed data. Default FALSE.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_skku.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribution of the Data Set Shown by Skewness and Kurtosis. — cyt_skku","text":"function generates histograms skewness kurtosis raw log2-transformed data. Additionally, either printResRaw /printResLog TRUE, function returns corresponding summary statistics data frame list data frames.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_skku.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distribution of the Data Set Shown by Skewness and Kurtosis. — cyt_skku","text":"cutoff computed one-tenth minimum positive value among numeric measurement columns avoid taking logarithms zero. rouping columns provided, function loops unique treatmentlevels (using first element group_cols treatment second group, available) computes metrics measurement column within subgroup. Without grouping columns, entire data set analyzed one overall group.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_skku.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distribution of the Data Set Shown by Skewness and Kurtosis. — cyt_skku","text":"","code":"# Example with grouping columns (e.g., \"Group\" and \"Treatment\") data(ExampleData1) cyt_skku(ExampleData1[, -c(2:3)], pdf_title = \"Skew_and_Kurtosis.pdf\",   group_cols = c(\"Group\") ) #> Warning: Removed 2 rows containing non-finite outside the scale range (`stat_bin()`). #> Warning: Removed 2 rows containing non-finite outside the scale range (`stat_bin()`).  # Example without grouping columns (analyzes the entire data set) cyt_skku(ExampleData1[, -c(1:3)], pdf_title = \"Skew_and_Kurtosis_Overall.pdf\")"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_splsda.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt_splsda","title":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt_splsda","text":"function conducts Sparse Partial Least Squares Discriminant Analysis (sPLS-DA) provided data. uses specified group_col (optionally group_col2) define class labels assuming remaining columns contain continuous variables. function supports log2 transformation via scale parameter generates series plots, including classification plots, scree plots, loadings plots, VIP score plots. Optionally, ROC curves produced roc TRUE. Additionally, cross-validation supported via LOOCV Mfold methods. group_col group_col2 provided differ, function analyzes treatment level separately.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_splsda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt_splsda","text":"","code":"cyt_splsda(   data,   group_col = NULL,   group_col2 = NULL,   colors = NULL,   pdf_title,   ellipse = FALSE,   bg = FALSE,   conf_mat = FALSE,   var_num,   cv_opt = NULL,   fold_num = 5,   scale = NULL,   comp_num = 2,   pch_values,   style = NULL,   roc = FALSE )"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_splsda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt_splsda","text":"data matrix data frame containing variables. Columns specified group_col group_col2 assumed continuous variables analysis. group_col string specifying column name contains first group information. group_col2 provided, used grouping treatment. group_col2 string specifying second grouping column. Default NULL. colors vector colors groups treatments. NULL, random palette (using rainbow) generated based number groups. pdf_title string specifying file name saving PDF output. ellipse Logical. Whether draw 95\\ figures. Default FALSE. bg Logical. Whether draw prediction background figures. Default FALSE. conf_mat Logical. Whether print confusion matrix classifications. Default FALSE. var_num Numeric. number variables used PLS-DA model. cv_opt Character. Option cross-validation method: either \"loocv\" \"Mfold\". Default NULL. fold_num Numeric. number folds use cv_opt \"Mfold\". Default 5. scale Character. Option data transformation; set \"log2\", log2 transformation applied continuous variables. Default NULL. comp_num Numeric. number components calculate sPLS-DA model. Default 2. pch_values vector integers specifying plotting characters (pch values) used plots. style Character. set \"3D\" \"3d\" comp_num equals 3, 3D plot generated using plot3D package. Default NULL. roc Logical. Whether compute plot ROC curve model. Default FALSE.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_splsda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt_splsda","text":"PDF file containing classification figures, component figures Variable Importance Projection (VIP) scores, classifications based VIP scores greater 1. ROC curves confusion matrices also produced requested.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_splsda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt_splsda","text":"","code":"# Loading Sample Data data_df <- ExampleData1[,-c(3)] data_df <- dplyr::filter(data_df, Group != \"T2D\", Treatment != \"Unstimulated\")  cyt_splsda(data_df, pdf_title = \"Example sPLS-DA Analysis.pdf\", colors = c(\"black\", \"purple\"), bg = FALSE, scale = \"log2\", conf_mat = FALSE, var_num = 25, cv_opt = NULL, comp_num = 3, pch_values = c(16, 4), style = \"3d\", ellipse = TRUE, group_col = \"Group\", group_col2 = \"Treatment\", roc = FALSE) #> [1] \"Results based on log2 transformation:\" #> Warning: the standard deviation is zero #> pdf  #>   2"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"Two Sample T-test Comparisons. — cyt_ttest","title":"Two Sample T-test Comparisons. — cyt_ttest","text":"function performs pairwise comparisons two groups combination categorical predictor (exactly two levels) continuous outcome variable. first converts character variables data factors applies log2 transformation continuous variables specified. Depending value scale, function conducts either two-sample t-test Mann-Whitney U test prints resulting p-values. error thrown categorical variable exactly two levels.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two Sample T-test Comparisons. — cyt_ttest","text":"","code":"cyt_ttest(data, scale = NULL)"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two Sample T-test Comparisons. — cyt_ttest","text":"data matrix data frame containing continuous variables categorical variables. scale character specifying transformation continuous variables. Options NULL (default) \"log2\". scale = \"log2\", log2 transformation applied two-sample t-test used; scale NULL, Mann-Whitney U test performed.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_ttest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two Sample T-test Comparisons. — cyt_ttest","text":"list p-values statistical tests combination continuous outcome categorical predictor returned.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_ttest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two Sample T-test Comparisons. — cyt_ttest","text":"","code":"data_df <- ExampleData1[, -c(3)] data_df <- dplyr::filter(data_df, Group != \"ND\", Treatment != \"Unstimulated\") # Two sample T-test cyt_ttest(data_df[, c(1, 2, 5:6)], scale = \"log2\") #> T-test p-value for PreT2D vs T2D on IFN.G: 0.02082 #> T-test p-value for PreT2D vs T2D on IL.10: 0.02484 #> T-test p-value for CD3/CD28 vs LPS on IFN.G: 7.31e-22 #> T-test p-value for CD3/CD28 vs LPS on IL.10: 0.0001402 # Mann-Whitney U Test cyt_ttest(data_df[, c(1, 2, 5:6)]) #> Mann-Whitney U test p-value for PreT2D vs T2D on IFN.G: 0.008462 #> Mann-Whitney U test p-value for PreT2D vs T2D on IL.10: 0.01191 #> Mann-Whitney U test p-value for CD3/CD28 vs LPS on IFN.G: 5.915e-19 #> Mann-Whitney U test p-value for CD3/CD28 vs LPS on IL.10: 3.278e-05"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_volc.html","id":null,"dir":"Reference","previous_headings":"","what":"Volcano Plot. — cyt_volc","title":"Volcano Plot. — cyt_volc","text":"function subsets numeric columns input data compares based selected grouping column. computes fold changes (ratio means) associated p-values (using two-sample t-tests) numeric variable two groups. results log2-transformed (fold change) -log10-transformed (p-values) generate volcano plot.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_volc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volcano Plot. — cyt_volc","text":"","code":"cyt_volc(   data,   group_col,   cond1 = NULL,   cond2 = NULL,   fold_change_thresh = 2,   p_value_thresh = 0.05,   top_labels = 10 )"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_volc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volcano Plot. — cyt_volc","text":"data matrix data frame containing data analyzed. group_col character string specifying column name used comparisons (e.g., group, treatment, stimulation). cond1 character string specifying name first condition comparison. Default NULL. cond2 character string specifying name second condition comparison. Default NULL. fold_change_thresh numeric threshold fold change. Default 2. p_value_thresh numeric threshold p-value. Default 0.05. top_labels integer specifying number top variables label plot. Default 10.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_volc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Volcano Plot. — cyt_volc","text":"list volcano plots (ggplot objects) pairwise comparison. Additionally, function prints data frame used plotting (excluding significance column) final comparison.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_volc.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Volcano Plot. — cyt_volc","text":"cond1 cond2 provided, function automatically generates possible pairwise combinations groups specified group_col comparisons.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_volc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Volcano Plot. — cyt_volc","text":"","code":"# Loading data data_df <- ExampleData1[,-c(2:3)]  volc_plot <- cyt_volc(data_df, \"Group\", cond1 = \"T2D\", cond2 = \"ND\", fold_change_thresh = 2.0, top_labels= 15) #>                    cytokine      fc_log      p_log significant #> IL.12.P70         IL.12.P70 -2.60117683 2.18641971        TRUE #> IL.6                   IL.6 -0.95013174 3.94758527       FALSE #> IL.27                 IL.27 -0.67878724 2.33099419       FALSE #> IL.23                 IL.23 -0.87320747 1.95290632       FALSE #> CCL.20.MIP.3A CCL.20.MIP.3A -0.48569948 1.40917287       FALSE #> IL.2                   IL.2 -0.80577278 1.22848122       FALSE #> IL.17F               IL.17F -0.93024059 1.16938373       FALSE #> IL.10                 IL.10 -0.48121242 1.01734902       FALSE #> IL.28A               IL.28A -0.31081278 0.98351262       FALSE #> IL.17A               IL.17A -0.80415853 0.90173665       FALSE #> IL.1B                 IL.1B -0.61564856 0.83381951       FALSE #> GM.CSF               GM.CSF  0.45980342 0.62042612       FALSE #> IL.21                 IL.21 -0.62254771 0.51843946       FALSE #> IL.17E.IL.25   IL.17E.IL.25  0.01449957 0.49515782       FALSE #> IL.22                 IL.22 -0.30363695 0.47550506       FALSE #> IL.9                   IL.9 -0.32752255 0.43117675       FALSE #> TNF.A                 TNF.A -0.15647551 0.21142412       FALSE #> IL.31                 IL.31  0.21056699 0.20929529       FALSE #> IL.4                   IL.4  0.21161574 0.20542291       FALSE #> IL.5                   IL.5 -0.20808037 0.17512546       FALSE #> IL.15                 IL.15 -0.05298748 0.12055764       FALSE #> IL.13                 IL.13 -0.07717527 0.06654004       FALSE #> IFN.G                 IFN.G -0.09088794 0.06221451       FALSE #> TNF.B                 TNF.B  0.07037796 0.05224667       FALSE #> IL.33                 IL.33  0.01213249 0.01719622       FALSE print(volc_plot$`T2D vs ND`)"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_xgb.html","id":null,"dir":"Reference","previous_headings":"","what":"Run XGBoost Classification on Cytokine Data. — cyt_xgb","title":"Run XGBoost Classification on Cytokine Data. — cyt_xgb","text":"function trains evaluates XGBoost classification model cytokine data. allows hyperparameter tuning, cross-validation, visualizes feature importance.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_xgb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run XGBoost Classification on Cytokine Data. — cyt_xgb","text":"","code":"cyt_xgb(   data,   group_col,   train_fraction = 0.7,   nrounds = 500,   max_depth = 6,   eta = 0.1,   nfold = 5,   cv = FALSE,   objective = \"multi:softprob\",   early_stopping_rounds = NULL,   eval_metric = \"mlogloss\",   gamma = 0,   colsample_bytree = 1,   subsample = 1,   min_child_weight = 1,   top_n_features = 10,   verbose = 1,   plot_roc = FALSE )"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_xgb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run XGBoost Classification on Cytokine Data. — cyt_xgb","text":"data data frame containing cytokine data, one column grouping variable rest numerical features. group_col string representing name column grouping variable (.e., target variable classification). train_fraction numeric value 0 1 representing proportion data use training (default 0.7). nrounds integer specifying number boosting rounds (default 500). max_depth integer specifying maximum depth trees (default 6). eta numeric value representing learning rate (default 0.1). nfold integer specifying number folds cross-validation (default 5). cv logical value indicating whether perform cross-validation (default FALSE). objective string specifying XGBoost objective function (default \"multi:softprob\" multi-class classification). early_stopping_rounds integer specifying number rounds improvement stop training early (default NULL). eval_metric string specifying evaluation metric (default \"mlogloss\"). gamma numeric value minimum loss reduction required make partition (default 0). colsample_bytree numeric value specifying subsample ratio columns constructing tree (default 1). subsample numeric value specifying subsample ratio training instances (default 1). min_child_weight numeric value specifying minimum sum instance weight needed child (default 1). top_n_features integer specifying number top features display importance plot (default 10). verbose integer specifying verbosity training process (default 1). plot_roc logical value indicating whether plot ROC curve calculate AUC binary classification (default FALSE).","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_xgb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run XGBoost Classification on Cytokine Data. — cyt_xgb","text":"list containing: model trained XGBoost model. confusion_matrix confusion matrix test set predictions. importance feature importance matrix top features. class_mapping named vector showing mapping class labels numeric values used training. cv_results Cross-validation results, cross-validation performed (otherwise NULL). plot ggplot object showing feature importance plot.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_xgb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run XGBoost Classification on Cytokine Data. — cyt_xgb","text":"function allows training XGBoost model cytokine data, splitting data training test sets. cross-validation enabled (cv = TRUE), performs k-fold cross-validation prints best iteration based evaluation metric. function also visualizes top N important features using xgb.ggplot.importance().","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt_xgb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run XGBoost Classification on Cytokine Data. — cyt_xgb","text":"","code":"# Example usage: data_df0 <- ExampleData1 data_df <- data.frame(data_df0[, 1:3], log2(data_df0[, -c(1:3)])) data_df <- data_df[, -c(2,3)] data_df <- dplyr::filter(data_df, Group != \"ND\")  cyt_xgb(   data = data_df, group_col = \"Group\",   nrounds = 500, max_depth = 4, eta = 0.05,   nfold = 5, cv = FALSE, eval_metric = \"mlogloss\",   early_stopping_rounds = NULL, top_n_features = 10,   verbose = 0, plot_roc = TRUE ) #>  #> ### Group to Numeric Label Mapping ### #> PreT2D    T2D  #>      0      1  #>  #> ### TRAINING XGBOOST MODEL ### #>  #> Best iteration from training (based on mlogloss ): #>     iter train_mlogloss test_mlogloss #>    <num>          <num>         <num> #> 1:   313     0.01860717     0.4529601 #> Setting levels: control = 0, case = 1 #> Setting direction: controls < cases #>  #> AUC:  0.9155767   #>  #> ### Confusion Matrix on Test Set ### #> Confusion Matrix and Statistics #>  #>           Reference #> Prediction  0  1 #>          0 25  7 #>          1  4 22 #>                                            #>                Accuracy : 0.8103           #>                  95% CI : (0.6859, 0.9013) #>     No Information Rate : 0.5              #>     P-Value [Acc > NIR] : 1.016e-06        #>                                            #>                   Kappa : 0.6207           #>                                            #>  Mcnemar's Test P-Value : 0.5465           #>                                            #>             Sensitivity : 0.8621           #>             Specificity : 0.7586           #>          Pos Pred Value : 0.7812           #>          Neg Pred Value : 0.8462           #>              Prevalence : 0.5000           #>          Detection Rate : 0.4310           #>    Detection Prevalence : 0.5517           #>       Balanced Accuracy : 0.8103           #>                                            #>        'Positive' Class : 0                #>                                            #>  #> ### Top 10 Important Features ### #>           Feature       Gain      Cover  Frequency #>            <char>      <num>      <num>      <num> #>  1:         TNF.A 0.18457678 0.10535233 0.09103448 #>  2:         IL.22 0.15117263 0.16064281 0.09885057 #>  3:     IL.12.P70 0.09955532 0.12855158 0.12321839 #>  4:         IL.33 0.09384522 0.08514973 0.07908046 #>  5:         IL.1B 0.07717208 0.03835908 0.05149425 #>  6:          IL.9 0.07554566 0.06955229 0.07080460 #>  7:         IL.15 0.04705740 0.05853239 0.03310345 #>  8:         IL.23 0.04440949 0.02533791 0.02988506 #>  9: CCL.20.MIP.3A 0.03678675 0.05623800 0.05287356 #> 10:         IL.13 0.02785650 0.02633047 0.03678161 #> Warning: A shallow copy of this data.table was taken so that := can add or remove 1 columns by reference. At an earlier point, this data.table was copied by R (or was created manually using structure() or similar). Avoid names<- and attr<- which in R currently (and oddly) may copy the whole data.table. Use set* syntax instead to avoid copying: ?set, ?setnames and ?setattr. It's also not unusual for data.table-agnostic packages to produce tables affected by this issue. If this message doesn't help, please report your use case to the data.table issue tracker so the root cause can be fixed or this message improved.  #> $model #> ##### xgb.Booster #> raw: 967.1 Kb  #> call: #>   xgboost::xgb.train(params = params, data = dtrain, nrounds = nrounds,  #>     watchlist = list(train = dtrain, test = dtest), verbose = verbose,  #>     early_stopping_rounds = early_stopping_rounds) #> params (as set within xgb.train): #>   objective = \"multi:softprob\", eval_metric = \"mlogloss\", num_class = \"2\", max_depth = \"4\", eta = \"0.05\", gamma = \"0\", colsample_bytree = \"1\", subsample = \"1\", min_child_weight = \"1\", validate_parameters = \"TRUE\" #> xgb.attributes: #>   niter #> callbacks: #>   cb.evaluation.log() #> # of features: 25  #> niter: 500 #> nfeatures : 25  #> evaluation_log: #>   iter train_mlogloss test_mlogloss #>  <num>          <num>         <num> #>      1     0.66160263     0.6754284 #>      2     0.63290945     0.6599301 #>    ---            ---           --- #>    499     0.01423204     0.4552888 #>    500     0.01421502     0.4553051 #>  #> $confusion_matrix #> Confusion Matrix and Statistics #>  #>           Reference #> Prediction  0  1 #>          0 25  7 #>          1  4 22 #>                                            #>                Accuracy : 0.8103           #>                  95% CI : (0.6859, 0.9013) #>     No Information Rate : 0.5              #>     P-Value [Acc > NIR] : 1.016e-06        #>                                            #>                   Kappa : 0.6207           #>                                            #>  Mcnemar's Test P-Value : 0.5465           #>                                            #>             Sensitivity : 0.8621           #>             Specificity : 0.7586           #>          Pos Pred Value : 0.7812           #>          Neg Pred Value : 0.8462           #>              Prevalence : 0.5000           #>          Detection Rate : 0.4310           #>    Detection Prevalence : 0.5517           #>       Balanced Accuracy : 0.8103           #>                                            #>        'Positive' Class : 0                #>                                            #>  #> $importance #>           Feature       Gain      Cover  Frequency #>            <char>      <num>      <num>      <num> #>  1:         TNF.A 0.18457678 0.10535233 0.09103448 #>  2:         IL.22 0.15117263 0.16064281 0.09885057 #>  3:     IL.12.P70 0.09955532 0.12855158 0.12321839 #>  4:         IL.33 0.09384522 0.08514973 0.07908046 #>  5:         IL.1B 0.07717208 0.03835908 0.05149425 #>  6:          IL.9 0.07554566 0.06955229 0.07080460 #>  7:         IL.15 0.04705740 0.05853239 0.03310345 #>  8:         IL.23 0.04440949 0.02533791 0.02988506 #>  9: CCL.20.MIP.3A 0.03678675 0.05623800 0.05287356 #> 10:         IL.13 0.02785650 0.02633047 0.03678161 #>  #> $class_mapping #> PreT2D    T2D  #>      0      1  #>  #> $cv_results #> NULL #>  #> $plot  #>"},{"path":"https://saraswatsh.github.io/CytoProfile/news/index.html","id":"cytoprofile-development-version","dir":"Changelog","previous_headings":"","what":"CytoProfile (development version)","title":"CytoProfile (development version)","text":"Initial CRAN submission.","code":""}]
