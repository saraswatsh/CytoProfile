[{"path":"https://saraswatsh.github.io/CytoProfile/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shubh Saraswat. Maintainer, author. Xiaohua Douglas Zhang. Author.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Saraswat S, Zhang X (2025). CytoProfile: Cytokine Profiling Analysis Tool. R package version 1.0, https://saraswatsh.github.io/CytoProfile/, https://github.com/saraswatsh/CytoProfile.","code":"@Manual{,   title = {CytoProfile: Cytokine Profiling Analysis Tool},   author = {Shubh Saraswat and Xiaohua Douglas Zhang},   year = {2025},   note = {R package version 1.0, https://saraswatsh.github.io/CytoProfile/},   url = {https://github.com/saraswatsh/CytoProfile}, }"},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"cytoprofile","dir":"","previous_headings":"","what":"Cytokine Profiling Analysis Tool","title":"Cytokine Profiling Analysis Tool","text":"goal CytoProfile conduct quality control using biological meaningful cutoff raw measured values cytokines. Specifically, test distributional symmetry suggest adopt transformation. Conduct exploratory analysis including summary statistics, generate enriched barplots, boxplots. , conduct univariate analysis multivariate analysis advance analysis.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Cytokine Profiling Analysis Tool","text":"installation CytoProfile package, make sure install BiocManager mix0mics packages using: can install development version CytoProfile GitHub :","code":"## install BiocManager if (!requireNamespace(\"BiocManager\", quietly = TRUE)) install.packages(\"BiocManager\")  ## install mixOmics  BiocManager::install('mixOmics') # install.packages(\"devtools\") devtools::install_github(\"saraswatsh/CytoProfile\")"},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Cytokine Profiling Analysis Tool","text":"examples using functions provided CytoProfile. saved files whether PDF PNG available output folder.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"id_1-data-loading-and-set-up","dir":"","previous_headings":"","what":"1. Data Loading and set up","title":"Cytokine Profiling Analysis Tool","text":"","code":"# Loading all packages required # Data manipulation and reshaping library(dplyr)       # For data filtering, grouping, and summarising. library(tidyr)       # For reshaping data (e.g., pivot_longer, pivot_wider).  # Plotting and visualization library(ggplot2)     # For creating all the ggplot-based visualizations. library(ggrepel)     # For improved label placement in plots (e.g., volcano plots). library(gplots)      # For heatmap.2, which is used to generate heatmaps. library(plot3D)      # For creating 3D scatter plots in PCA and sPLS-DA analyses. library(reshape2)    # For data transformation (e.g., melt) in cross-validation plots.  # Statistical analysis library(mixOmics)    # For multivariate analyses (PCA, sPLS-DA, etc.). library(moments)     # For computing skewness and kurtosis. library(pROC)        # For ROC curve generation in machine learning model evaluation.  # Machine learning library(xgboost)     # For building XGBoost classification models. library(randomForest) # For building Random Forest classification models. library(caret)       # For cross-validation and other machine learning utilities.  # Package development and document rendering library(knitr)       # For knitting RMarkdown files and setting chunk options. library(devtools)    # For installing the development version of the package from GitHub.  # devtools::install_github(\"saraswatsh/CytoProfile\") library(CytoProfile)  # Loading in data data(\"cytodata\") data.df <- cytodata  ## Setting working directory to output folder to save the PDF files.  opts_knit$set(root.dir = \"E:/Desktop/RA/R Package/CytoProfile/output\")"},{"path":[]},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"boxplots","dir":"","previous_headings":"2. Exploratory Data Analysis","what":"Boxplots","title":"Cytokine Profiling Analysis Tool","text":"","code":"# Generating boxplots to check for outliers for raw values cyt.bp(data.df[,-c(1:4)], Title = \"Boxplot.byCytokine.Raw.pdf\") # We are removing the first 4 columns as we only want the continuous variables.  #> png  #>   2  # Generating boxplots to check for outliers for log2 values cyt.bp(log2(data.df[,-c(1:4)]), Title = \"Boxplot.byCytokine.log2.pdf\") # Make sure to use log2 to transform the cytokines and same reason as above for removing initial columns #> png  #>   2"},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"group-specific-boxplots","dir":"","previous_headings":"2. Exploratory Data Analysis","what":"Group-Specific Boxplots","title":"Cytokine Profiling Analysis Tool","text":"","code":"# Second function for generating boxplots # Raw values cyt.bp2(data.df[,-c(1,4)], Title = \"Boxplot.byGroupandTreatment.raw.pdf\", scale = NULL) #> png  #>   2 # Log-2 transformation cyt.bp2(data.df[,-c(1,4)], Title = \"Boxplot.byGroupandTreatment.log2.pdf\", scale = \"log2\") #> png  #>   2"},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"id_3-skewness-and-kurtosis","dir":"","previous_headings":"","what":"3. Skewness and Kurtosis","title":"Cytokine Profiling Analysis Tool","text":"","code":"# Generating histograms for skewness and kurtosis based only on raw values and log2 transformation cyt.skku(data.df[,-c(1:4)], Title = \"Skew and Kurtosis.pdf\", group.cols = NULL) # Generating histograms for skewness and kurtosis based on raw values and log2 transformation with grouping column cyt.skku(cytodata[,-c(1,3,4)], Title = \"Skew and Kurtosis 2.pdf\", group.cols = c(\"Group\"))"},{"path":[]},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"basic-error-bar-plot","dir":"","previous_headings":"4. Error Bar Plots","what":"Basic Error Bar Plot","title":"Cytokine Profiling Analysis Tool","text":"","code":"# Generating Error Bar Plot cytokine.mat <- cytodata[, -c(1:4)] # Extracting all cytokines to be stored in one object cytokineNames <- colnames(cytokine.mat) # Extracting the cytokine names nCytokine <- length(cytokineNames) # Obtaining the total number of cytokines results <- cyt.skku(cytodata[,-c(1,4)], printResLog = TRUE, group.cols = c(\"Group\", \"Treatment\")) # Extracting values pdf( \"barErrorPlot.pdf\" ) par(mfrow=c(2,2), mar=c(8.1,  4.1, 4.1, 2.1) ) for( k in 1:nCytokine ) {   center.df <- data.frame( \"name\"=rownames(results[,,k]), results[,,k] )   cyt.errbp(center.df, pLab=FALSE, esLab=FALSE, classSymbol=TRUE,                ylab=\"Concentration in log2 scale\",  main=cytokineNames[k] ) } dev.off() #> png  #>   2"},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"enriched-error-bar-plot-with-p-values-and-effect-sizes","dir":"","previous_headings":"4. Error Bar Plots","what":"Enriched Error Bar Plot with p-values and Effect Sizes","title":"Cytokine Profiling Analysis Tool","text":"","code":"# Generating Error Bar Plot enriched with p-value and effect size  data.df <- cytodata[,-1] cyt.mat <- log2(data.df[,-c(1:3)]) data.df1 <- data.frame(data.df[,c(1:3)], cyt.mat) cytokineNames <- colnames(cyt.mat) nCytokine <- length(cytokineNames) condt <- !is.na(cyt.mat) & cyt.mat >0 Cutoff <- min(cyt.mat[condt], na.rm=TRUE)/10 # Creating a matrix for p-values from anova tests p.aov.mat <- matrix(NA, nrow=nCytokine, ncol=3) # Changing column names dimnames(p.aov.mat) <- list( cytokineNames, c(\"Group\", \"Treatment\", \"Interaction\") ) # Matrix to extract p-values from Tukey group comparison p.groupComp.mat <- matrix(NA, nrow=nCytokine, ncol=3) # Changing column names dimnames(p.groupComp.mat) <- list( cytokineNames, c(\"2-1\", \"3-1\", \"3-2\") ) # Matrix for SSMD same size as other matrices ssmd.groupComp.stm.mat <- mD.groupComp.stm.mat <- p.groupComp.stm.mat <- p.groupComp.mat  for( i in 1:nCytokine ) {    #i <- 1 # i<-2   Cytokine <- (cyt.mat[,i]+Cutoff)   cytokine.aov <- aov( Cytokine ~ Group * Treatment, data=data.df)   aov.table <- summary(cytokine.aov)[[1]]   p.aov.mat[i,] <- aov.table[1:3,5]   p.groupComp.mat[i,] <- TukeyHSD(cytokine.aov)$Group[1:3,4]   p.groupComp.stm.mat[i,] <- TukeyHSD(cytokine.aov)$`Group:Treatment`[c(1:3),4]   mD.groupComp.stm.mat[i,] <- TukeyHSD(cytokine.aov)$`Group:Treatment`[c(1:3),1]   ssmd.groupComp.stm.mat[i,]<-mD.groupComp.stm.mat[i,]/sqrt(2*aov.table[\"Residuals\",\"Mean Sq\"]) }  results <- cyt.skku(cytodata[,-c(1,4)], printResLog = TRUE, group.cols = c(\"Group\", \"Treatment\")) pdf( \"barErrorPlot.enriched.pdf\" ) par(mfrow=c(2,3), mar=c(8.1,  4.1, 4.1, 2.1) ) for( k in 1:nCytokine ) {   #k <- 1   result.mat <- results[1:9,,k]   center.df <-     data.frame( \"name\"=rownames(result.mat), result.mat[, c(\"center\", \"spread\")],                 \"p.value\"= c(1,p.groupComp.stm.mat[k,1:2]),                 \"effect.size\"=c(0,ssmd.groupComp.stm.mat[k,1:2])     )   cyt.errbp(center.df, pLab=TRUE, esLab=TRUE, classSymbol=TRUE,                ylab=\"Concentration in log2 scale\", main=cytokineNames[k]) } dev.off() #> png  #>   2"},{"path":[]},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"two-sample-t-test-and-mann-whitney-u-test","dir":"","previous_headings":"5. Univariate Analysis","what":"Two Sample T-test and Mann Whitney U Test","title":"Cytokine Profiling Analysis Tool","text":"","code":"# Performing Two Sample T-test and Mann Whitney U Test data.df <- cytodata[,-c(1,4)] data.df <- filter(data.df, Group != \"ND\", Treatment != \"Unstimulated\") # Two sample T-test cyt.ttests(data.df[, c(1:2, 5:6)], scale = \"log2\") #> T-test p-value for PreT2D vs T2D on IFN.G: 0.02082 #> T-test p-value for PreT2D vs T2D on IL.10: 0.02484 #> T-test p-value for CD3/CD28 vs LPS on IFN.G: 7.31e-22 #> T-test p-value for CD3/CD28 vs LPS on IL.10: 0.0001402 # Mann Whitney U Test cyt.ttests(data.df[, c(1:2, 5:6)]) #> Mann-Whitney U test p-value for PreT2D vs T2D on IFN.G: 0.008462 #> Mann-Whitney U test p-value for PreT2D vs T2D on IL.10: 0.01191 #> Mann-Whitney U test p-value for CD3/CD28 vs LPS on IFN.G: 5.915e-19 #> Mann-Whitney U test p-value for CD3/CD28 vs LPS on IL.10: 3.278e-05"},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"anova-comparisons-test","dir":"","previous_headings":"5. Univariate Analysis","what":"ANOVA Comparisons Test","title":"Cytokine Profiling Analysis Tool","text":"","code":"# Performing ANOVA comparisons test for univariate analysis cyt.anova(data.df[,c(1:2,5:6)]) # This only considers 2 cytokines for this example only #> $IFN.G_Group #> [1] 0.00356939 #>  #> $IL.10_Group #> [1] 0.003323717 #>  #> $IFN.G_Treatment #> [1] 3.805612e-08 #>  #> $IL.10_Treatment #> [1] 0.0002059574"},{"path":[]},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"partial-least-squares-discriminant-analysis-pls-da","dir":"","previous_headings":"6. Multivariate Analysis","what":"Partial Least Squares Discriminant Analysis (PLS-DA)","title":"Cytokine Profiling Analysis Tool","text":"","code":"# In this code, we will have background predict to be turned on to see the classification areas and  # we will also print out the confusion matrix based on classification.  # Note this takes into account all groups and treatment and all values are log transformed through  # cyt.plsda function.  data.df <- cytodata cyt.plsda(data.df[,-c(1,4)], title = \"Example PLS-DA Analysis.pdf\",            colors = c(\"black\", \"purple\", \"red2\"),           bg = TRUE, scale = \"log2\",            conf.mat = TRUE, var.num = 25,            cv.opt = \"loocv\",           comp.num = 2, pch.values = c(16, 4, 3),            group.col = \"Group\", trt.col = \"Treatment\", roc = TRUE) #> [1] \"Results based on log2 transformation:\" #> [1] \"CD3/CD28 LOOCV Accuracy: 49%\" #> [1] \"CD3/CD28 LOOCV Accuracy (VIP>1): 52%\" #> [1] \"CD3/CD28 Confusion Matrix for PLS-DA Comparison\" #>           Reference #> Prediction ND PreT2D T2D #>     ND      0      0   1 #>     PreT2D 15     28   5 #>     T2D    18      5  27 #> Accuracy  #>     0.56  #> [1] NA #> [1] NA #> [1] \"CD3/CD28 Confusion Matrix for PLS-DA Comparison with VIP Score > 1\" #>           Reference #> Prediction ND PreT2D T2D #>     ND      0      0   1 #>     PreT2D 17     27   7 #>     T2D    16      6  25 #> Accuracy  #>     0.53  #> [1] NA #> [1] NA #> [1] \"LPS LOOCV Accuracy: 44%\" #> [1] \"LPS LOOCV Accuracy (VIP>1): 44%\" #> [1] \"LPS Confusion Matrix for PLS-DA Comparison\" #>           Reference #> Prediction ND PreT2D T2D #>     ND     13      4   9 #>     PreT2D 12     21   5 #>     T2D     8      8  19 #> Accuracy  #>     0.54  #> [1] NA #> [1] NA #> [1] \"LPS Confusion Matrix for PLS-DA Comparison with VIP Score > 1\" #>           Reference #> Prediction ND PreT2D T2D #>     ND     13      4   7 #>     PreT2D 14     22   5 #>     T2D     6      7  21 #> Accuracy  #>     0.57  #> [1] NA #> [1] NA #> [1] \"Unstimulated LOOCV Accuracy: 34%\" #> [1] \"Unstimulated LOOCV Accuracy (VIP>1): 42%\" #> [1] \"Unstimulated Confusion Matrix for PLS-DA Comparison\" #>           Reference #> Prediction ND PreT2D T2D #>     ND      6      4   6 #>     PreT2D 13     27   9 #>     T2D    14      2  18 #> Accuracy  #>     0.52  #> [1] NA #> [1] NA #> [1] \"Unstimulated Confusion Matrix for PLS-DA Comparison with VIP Score > 1\" #>           Reference #> Prediction ND PreT2D T2D #>     ND      8      4   7 #>     PreT2D 12     22   5 #>     T2D    13      7  21 #> Accuracy  #>     0.52  #> [1] NA #> [1] NA #> png  #>   2  # Filtering data for specific groups and treatment filt.data <- filter(data.df, Group != \"ND\", Treatment != \"Unstimulated\") cyt.plsda(filt.data[,-c(1,4)], title = \"Example PLS-DA Analysis 2.pdf\",            colors = c(\"black\", \"purple\"),           bg = TRUE, scale = \"log2\",            conf.mat = TRUE, var.num = 25,            cv.opt = \"Mfold\", fold.num = 5,           comp.num = 3, pch.values = c(3, 4), style = \"3d\",           group.col = \"Group\", trt.col = \"Treatment\", roc = TRUE) #> [1] \"Results based on log2 transformation:\" #> [1] \"CD3/CD28 Mfold Accuracy: 79%\" #> [1] \"CD3/CD28 Mfold Accuracy (VIP>1): 78%\" #> [1] \"CD3/CD28 Confusion Matrix for PLS-DA Comparison\" #>           Reference #> Prediction PreT2D T2D #>     PreT2D     28   7 #>     T2D         5  26 #> Accuracy  #>     0.82  #> Sensitivity  #>        0.85  #> Specificity  #>        0.79  #> [1] \"CD3/CD28 Confusion Matrix for PLS-DA Comparison with VIP Score > 1\" #>           Reference #> Prediction PreT2D T2D #>     PreT2D     27   6 #>     T2D         6  27 #> Accuracy  #>     0.82  #> Sensitivity  #>        0.82  #> Specificity  #>        0.82 #> [1] \"LPS Mfold Accuracy: 72%\" #> [1] \"LPS Mfold Accuracy (VIP>1): 78%\" #> [1] \"LPS Confusion Matrix for PLS-DA Comparison\" #>           Reference #> Prediction PreT2D T2D #>     PreT2D     25   4 #>     T2D         8  29 #> Accuracy  #>     0.82  #> Sensitivity  #>        0.76  #> Specificity  #>        0.88  #> [1] \"LPS Confusion Matrix for PLS-DA Comparison with VIP Score > 1\" #>           Reference #> Prediction PreT2D T2D #>     PreT2D     28   8 #>     T2D         5  25 #> Accuracy  #>      0.8  #> Sensitivity  #>        0.85  #> Specificity  #>        0.76 #> png  #>   2"},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"id_7-principal-component-analysis-pca","dir":"","previous_headings":"","what":"7. Principal Component Analysis (PCA)","title":"Cytokine Profiling Analysis Tool","text":"","code":"data <- cytodata[,-c(1,4, 24)] data.df <- filter(data, Group != \"ND\" & Treatment != \"Unstimulated\") cyt.pca(data.df, title = \"Example PCA Analysis.pdf\" ,colors = c(\"black\", \"red2\"), scale = \"log2\", comp.num = 3, pch.values = c(16,4), style = \"3D\", group.col = \"Group\", trt.col = \"Treatment\") #> [1] \"Results based on log2 transformation:\" #> png  #>   2 cyt.pca(data.df, title = \"Example PCA Analysis 2.pdf\" ,colors = c(\"black\", \"red2\"), scale = \"log2\", comp.num = 2, pch.values = c(16,4), group.col = \"Group\") #> [1] \"Results based on log2 transformation:\" #> png  #>   2"},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"id_8-volcano-plot","dir":"","previous_headings":"","what":"8. Volcano Plot","title":"Cytokine Profiling Analysis Tool","text":"","code":"# Generating Volcano Plot data.df <- cytodata[,-4] volc_plot <- cyt.volc(data.df, \"Group\", cond1 = \"T2D\", cond2 = \"ND\", fold_change_thresh = 2.0, top_labels= 15) #>                    Cytokine      FC_Log      P_Log Significant #> IL.12.P70         IL.12.P70 -2.60117683 2.18641971        TRUE #> IL.6                   IL.6 -0.95013174 3.94758527       FALSE #> IL.27                 IL.27 -0.67878724 2.33099419       FALSE #> IL.23                 IL.23 -0.87320747 1.95290632       FALSE #> CCL.20.MIP.3A CCL.20.MIP.3A -0.48569948 1.40917287       FALSE #> IL.2                   IL.2 -0.80577278 1.22848122       FALSE #> IL.17F               IL.17F -0.93024059 1.16938373       FALSE #> IL.10                 IL.10 -0.48121242 1.01734902       FALSE #> IL.28A               IL.28A -0.31081278 0.98351262       FALSE #> IL.17A               IL.17A -0.80415853 0.90173665       FALSE #> IL.1B                 IL.1B -0.61564856 0.83381951       FALSE #> GM.CSF               GM.CSF  0.45980342 0.62042612       FALSE #> IL.21                 IL.21 -0.62254771 0.51843946       FALSE #> IL.17E.IL.25   IL.17E.IL.25  0.01449957 0.49515782       FALSE #> IL.22                 IL.22 -0.30363695 0.47550506       FALSE #> IL.9                   IL.9 -0.32752255 0.43117675       FALSE #> TNF.A                 TNF.A -0.15647551 0.21142412       FALSE #> IL.31                 IL.31  0.21056699 0.20929529       FALSE #> IL.4                   IL.4  0.21161574 0.20542291       FALSE #> IL.5                   IL.5 -0.20808037 0.17512546       FALSE #> IL.15                 IL.15 -0.05298748 0.12055764       FALSE #> IL.13                 IL.13 -0.07717527 0.06654004       FALSE #> IFN.G                 IFN.G -0.09088794 0.06221451       FALSE #> TNF.B                 TNF.B  0.07037796 0.05224667       FALSE #> IL.33                 IL.33  0.01213249 0.01719622       FALSE ggsave(\"VolcanoPlot.png\", plot = volc_plot$`T2D vs ND`, dpi = 300)  # Printing table (This is usually printed by default when the function is called and not saved as an object.) print(volc_plot$`T2D vs ND`$data) #>                    Cytokine      FC_Log      P_Log Significant         Label #> IL.12.P70         IL.12.P70 -2.60117683 2.18641971        TRUE     IL.12.P70 #> IL.6                   IL.6 -0.95013174 3.94758527       FALSE          IL.6 #> IL.27                 IL.27 -0.67878724 2.33099419       FALSE         IL.27 #> IL.23                 IL.23 -0.87320747 1.95290632       FALSE         IL.23 #> CCL.20.MIP.3A CCL.20.MIP.3A -0.48569948 1.40917287       FALSE CCL.20.MIP.3A #> IL.2                   IL.2 -0.80577278 1.22848122       FALSE          IL.2 #> IL.17F               IL.17F -0.93024059 1.16938373       FALSE        IL.17F #> IL.10                 IL.10 -0.48121242 1.01734902       FALSE         IL.10 #> IL.28A               IL.28A -0.31081278 0.98351262       FALSE        IL.28A #> IL.17A               IL.17A -0.80415853 0.90173665       FALSE        IL.17A #> IL.1B                 IL.1B -0.61564856 0.83381951       FALSE         IL.1B #> GM.CSF               GM.CSF  0.45980342 0.62042612       FALSE        GM.CSF #> IL.21                 IL.21 -0.62254771 0.51843946       FALSE         IL.21 #> IL.17E.IL.25   IL.17E.IL.25  0.01449957 0.49515782       FALSE  IL.17E.IL.25 #> IL.22                 IL.22 -0.30363695 0.47550506       FALSE         IL.22 #> IL.9                   IL.9 -0.32752255 0.43117675       FALSE               #> TNF.A                 TNF.A -0.15647551 0.21142412       FALSE               #> IL.31                 IL.31  0.21056699 0.20929529       FALSE               #> IL.4                   IL.4  0.21161574 0.20542291       FALSE               #> IL.5                   IL.5 -0.20808037 0.17512546       FALSE               #> IL.15                 IL.15 -0.05298748 0.12055764       FALSE               #> IL.13                 IL.13 -0.07717527 0.06654004       FALSE               #> IFN.G                 IFN.G -0.09088794 0.06221451       FALSE               #> TNF.B                 TNF.B  0.07037796 0.05224667       FALSE               #> IL.33                 IL.33  0.01213249 0.01719622       FALSE"},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"id_9-heatmap","dir":"","previous_headings":"","what":"9. Heatmap","title":"Cytokine Profiling Analysis Tool","text":"","code":"# Generating Heat map cyt.heatmap(data = data.df,                     scale = \"log2\",        # Optional scaling                     annotation_col_name = \"Group\",                     title = \"Heatmap.png\") #> png  #>   2"},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"id_10-dual-flashlight-plot","dir":"","previous_headings":"","what":"10. Dual Flashlight Plot","title":"Cytokine Profiling Analysis Tool","text":"","code":"# Generating dual flashlights plot data.df <- cytodata[,-c(1,3:4)]  dfp <- cyt.dualflashplot(data.df, group_var = \"Group\", group1 = \"T2D\", group2 = \"ND\",                    ssmd_thresh = -0.2, log2fc_thresh = 1, top_labels = 10) #> # A tibble: 25 × 11 #>    cytokine         mean_ND mean_PreT2D   mean_T2D variance_ND variance_PreT2D #>    <chr>              <dbl>       <dbl>      <dbl>       <dbl>           <dbl> #>  1 CCL.20.MIP.3A   634.        404.       887.        6.72e+ 5         2.74e+5 #>  2 GM.CSF            2.65        3.11       1.92      2.63e+ 1         3.14e+1 #>  3 IFN.G         57730.      18303.     61484.        2.86e+10         2.30e+9 #>  4 IL.10           979.        836.      1366.        1.99e+ 6         1.19e+6 #>  5 IL.12.P70        13.0        39.1       78.9       4.15e+ 2         2.56e+4 #>  6 IL.13          1064.       1543.      1122.        5.60e+ 6         1.11e+7 #>  7 IL.15             7.92        4.29       8.22      3.54e+ 1         2.58e+1 #>  8 IL.17A          352.        653.       615.        9.40e+ 5         2.88e+6 #>  9 IL.17E.IL.25      0.0101      0.0163     0.01      1.01e- 6         3.88e-3 #> 10 IL.17F            1.63        2.35       3.11      1.56e+ 1         3.37e+1 #> 11 IL.1B          2806.       2977.      4299.        6.63e+ 7         3.76e+7 #> 12 IL.2           9227.      10718.     16129.        2.60e+ 8         4.10e+8 #> 13 IL.21           205.        210.       316.        3.15e+ 5         2.49e+5 #> 14 IL.22             0.0513      0.0684     0.0633    4.58e- 3         4.51e-3 #> 15 IL.23             0.147       0.243      0.269     3.13e- 2         9.37e-2 #> 16 IL.27             0.0662      0.0834     0.106     6.18e- 3         5.66e-3 #> 17 IL.28A            0.0537      0.0710     0.0666    2.45e- 3         5.10e-3 #> 18 IL.31             0.0409      0.0905     0.0354    6.62e- 3         4.88e-2 #> 19 IL.33             1.17        1.43       1.16      2.09e+ 0         2.71e+0 #> 20 IL.4              0.344       0.707      0.297     4.24e- 1         2.96e+0 #> 21 IL.5            134.        340.       155.        1.09e+ 5         9.88e+5 #> 22 IL.6           4620.       5197.      8925.        2.86e+ 7         5.72e+7 #> 23 IL.9            203.        256.       254.        1.34e+ 5         2.11e+5 #> 24 TNF.A          5046.       3069.      5624.        7.02e+ 7         1.63e+7 #> 25 TNF.B             0.641       0.709      0.610     2.37e+ 0         2.76e+0 #> # ℹ 5 more variables: variance_T2D <dbl>, ssmd <dbl>, log2FC <dbl>, #> #   SSMD_Category <chr>, Significant <lgl> ggsave(\"DualFlashlightPlot.png\", plot = dfp$plot_env$p, dpi = 300, width = 3000, height = 2000, units = \"px\")  # Printing table (This is usually printed by default when the function is called and not saved as an object.) print(dfp$data) #> # A tibble: 25 × 11 #>    cytokine         mean_ND mean_PreT2D mean_T2D variance_ND variance_PreT2D #>    <chr>              <dbl>       <dbl>    <dbl>       <dbl>           <dbl> #>  1 CCL.20.MIP.3A   634.        404.       887.      6.72e+ 5         2.74e+5 #>  2 GM.CSF            2.65        3.11       1.92    2.63e+ 1         3.14e+1 #>  3 IFN.G         57730.      18303.     61484.      2.86e+10         2.30e+9 #>  4 IL.10           979.        836.      1366.      1.99e+ 6         1.19e+6 #>  5 IL.12.P70        13.0        39.1       78.9     4.15e+ 2         2.56e+4 #>  6 IL.13          1064.       1543.      1122.      5.60e+ 6         1.11e+7 #>  7 IL.15             7.92        4.29       8.22    3.54e+ 1         2.58e+1 #>  8 IL.17A          352.        653.       615.      9.40e+ 5         2.88e+6 #>  9 IL.17E.IL.25      0.0101      0.0163     0.01    1.01e- 6         3.88e-3 #> 10 IL.17F            1.63        2.35       3.11    1.56e+ 1         3.37e+1 #> # ℹ 15 more rows #> # ℹ 5 more variables: variance_T2D <dbl>, ssmd <dbl>, log2FC <dbl>, #> #   SSMD_Category <chr>, Significant <lgl>"},{"path":[]},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"using-xgboost-for-classification","dir":"","previous_headings":"11. Machine Learning Models","what":"Using XGBoost for classification","title":"Cytokine Profiling Analysis Tool","text":"","code":"data.df0 <- cytodata data.df <- data.frame(data.df0[,1:4], log2(data.df0[,-c(1:4)])) data.df <- data.df[,-c(1,3,4)] data.df <- filter(data.df, Group != \"ND\")  xgb.results <- cyt.xgb(data = data.df, group_col = 'Group',                    nrounds = 500, max_depth = 4, eta = 0.05,                    nfold = 5, cv = TRUE, eval_metric = \"mlogloss\",                    early_stopping_rounds = NULL, top_n_features = 10,                    verbose = 0, plot_roc = TRUE) #>  #> ### Group to Numeric Label Mapping ### #> PreT2D    T2D  #>      0      1  #>  #> ### TRAINING XGBOOST MODEL ### #>  #> Best iteration from training (based on mlogloss ): #>     iter train_mlogloss test_mlogloss #>    <num>          <num>         <num> #> 1:   313     0.01860717     0.4529601 #>  #> AUC:  0.9155767 #>  #> ### Confusion Matrix on Test Set ### #> Confusion Matrix and Statistics #>  #>           Reference #> Prediction  0  1 #>          0 25  7 #>          1  4 22 #>                                            #>                Accuracy : 0.8103           #>                  95% CI : (0.6859, 0.9013) #>     No Information Rate : 0.5              #>     P-Value [Acc > NIR] : 1.016e-06        #>                                            #>                   Kappa : 0.6207           #>                                            #>  Mcnemar's Test P-Value : 0.5465           #>                                            #>             Sensitivity : 0.8621           #>             Specificity : 0.7586           #>          Pos Pred Value : 0.7812           #>          Neg Pred Value : 0.8462           #>              Prevalence : 0.5000           #>          Detection Rate : 0.4310           #>    Detection Prevalence : 0.5517           #>       Balanced Accuracy : 0.8103           #>                                            #>        'Positive' Class : 0                #>                                            #>  #> ### Top 10 Important Features ### #>           Feature       Gain      Cover  Frequency #>            <char>      <num>      <num>      <num> #>  1:         TNF.A 0.18457678 0.10535233 0.09103448 #>  2:         IL.22 0.15117263 0.16064281 0.09885057 #>  3:     IL.12.P70 0.09955532 0.12855158 0.12321839 #>  4:         IL.33 0.09384522 0.08514973 0.07908046 #>  5:         IL.1B 0.07717208 0.03835908 0.05149425 #>  6:          IL.9 0.07554566 0.06955229 0.07080460 #>  7:         IL.15 0.04705740 0.05853239 0.03310345 #>  8:         IL.23 0.04440949 0.02533791 0.02988506 #>  9: CCL.20.MIP.3A 0.03678675 0.05623800 0.05287356 #> 10:         IL.13 0.02785650 0.02633047 0.03678161 #>  #> ### CROSS-VALIDATION USING XGBOOST ### #>  #> Best iteration from cross-validation: #>     iter train_mlogloss_mean train_mlogloss_std test_mlogloss_mean #>    <num>               <num>              <num>              <num> #> 1:    45           0.1664957         0.01796909           0.457419 #>    test_mlogloss_std #>                <num> #> 1:        0.08743712 #> Confusion Matrix and Statistics #>  #>           Reference #> Prediction  0  1 #>          0 57 13 #>          1 13 57 #>                                           #>                Accuracy : 0.8143          #>                  95% CI : (0.7398, 0.875) #>     No Information Rate : 0.5             #>     P-Value [Acc > NIR] : 1.212e-14       #>                                           #>                   Kappa : 0.6286          #>                                           #>  Mcnemar's Test P-Value : 1               #>                                           #>             Sensitivity : 0.8143          #>             Specificity : 0.8143          #>          Pos Pred Value : 0.8143          #>          Neg Pred Value : 0.8143          #>              Prevalence : 0.5000          #>          Detection Rate : 0.4071          #>    Detection Prevalence : 0.5000          #>       Balanced Accuracy : 0.8143          #>                                           #>        'Positive' Class : 0               #>                                           #>  #> Cross-Validation Accuracy:  0.8142857"},{"path":"https://saraswatsh.github.io/CytoProfile/index.html","id":"using-random-forest-for-classification","dir":"","previous_headings":"11. Machine Learning Models","what":"Using Random Forest for classification","title":"Cytokine Profiling Analysis Tool","text":"","code":"rf.results <- cyt.rf(data = data.df, group_col = 'Group', k_folds = 5,                   ntree = 1000, mtry = 4, run_rfcv = TRUE, plot_roc = TRUE) #>  #> ### RANDOM FOREST RESULTS ON TRAINING SET ### #>  #> Call: #>  randomForest(formula = formula, data = train_data, ntree = ntree,      mtry = mtry, importance = TRUE)  #>                Type of random forest: classification #>                      Number of trees: 1000 #> No. of variables tried at each split: 4 #>  #>         OOB estimate of  error rate: 11.43% #> Confusion matrix: #>        PreT2D T2D class.error #> PreT2D     62   8   0.1142857 #> T2D         8  62   0.1142857 #>  #> Accuracy on training set:  0.8857143  #>  #> Class 'PreT2D' metrics: #>   Sensitivity:  0.886  #>   Specificity:  0.886  #>  #> Class 'T2D' metrics: #>   Sensitivity:  0.886  #>   Specificity:  0.886  #>  #> ### PREDICTIONS ON TEST SET ### #>           Reference #> Prediction PreT2D T2D #>     PreT2D     25   7 #>     T2D         4  22 #>  #> Accuracy on test set:  0.8103448  #>  #> Sensitivity by class: #> Class: PreT2D: 0.862 #> Class: T2D: 0.241 #>  #> Specificity by class: #> Class: T2D: 0.759 #> Class: PreT2D: 0.138 #>  #> AUC:  0.9298454 #>  #> ### RANDOM FOREST CROSS-VALIDATION FOR FEATURE SELECTION ### #> Random Forest CV completed for feature selection. Check the plot for error vs. number of variables."},{"path":"https://saraswatsh.github.io/CytoProfile/reference/CytoProfile-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CytoProfile: Cytokine Profiling Analysis Tool — CytoProfile-package","title":"CytoProfile: Cytokine Profiling Analysis Tool — CytoProfile-package","text":"CytoProfile comprehensive tool cytokine profiling analysis. supports quality control using biologically meaningful cutoffs raw cytokine measurements tests distributional symmetry suggest appropriate transformations. package offers exploratory data analysis summary statistics, enhanced boxplots, barplots, along univariate multivariate analysis capabilities -depth cytokine profiling.","code":""},{"path":[]},{"path":"https://saraswatsh.github.io/CytoProfile/reference/CytoProfile-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CytoProfile: Cytokine Profiling Analysis Tool — CytoProfile-package","text":"Maintainer: Shubh Saraswat shubh.saraswat00@gmail.com Authors: Xiaohua Douglas Zhang douglas.zhang@uky.edu","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.anova.html","id":null,"dir":"Reference","previous_headings":"","what":"ANOVA analysis on all continuous variables within the data. — cyt.anova","title":"ANOVA analysis on all continuous variables within the data. — cyt.anova","text":"function performs ANOVA continuous variable every categorical predictor input data. valid predictor (.e., one level 10 levels), conducts Tukey's HSD test extracts adjusted p-values pairwise comparisons.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.anova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ANOVA analysis on all continuous variables within the data. — cyt.anova","text":"","code":"cyt.anova(x.df)"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.anova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ANOVA analysis on all continuous variables within the data. — cyt.anova","text":"x.df data frame matrix containing categorical continuous variables. Character columns converted factors; factor columns used predictors, numeric columns used continuous outcomes.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.anova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ANOVA analysis on all continuous variables within the data. — cyt.anova","text":"list adjusted p-values Tukey's HSD tests combination continuous outcome categorical predictor. list elements named format \"outcome_predictor\".","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.anova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ANOVA analysis on all continuous variables within the data. — cyt.anova","text":"","code":"if (FALSE) { # \\dontrun{ data(\"cytodata\") cyt.anova(cytodata[, c(2:4,5:6)]) } # }"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.bp.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating a PDF file to show the measured value by column of the data frame. — cyt.bp","title":"Generating a PDF file to show the measured value by column of the data frame. — cyt.bp","text":"function creates PDF file containing box plots continuous variables provided data. number columns x.df exceeds bin.size, function splits plots across multiple pages.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.bp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating a PDF file to show the measured value by column of the data frame. — cyt.bp","text":"","code":"cyt.bp(x.df, Title, bin.size = 25, mfRow = c(1, 1), yLim = NULL)"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.bp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating a PDF file to show the measured value by column of the data frame. — cyt.bp","text":"x.df matrix data frame containing raw data plotted. Title string representing name PDF file. bin.size maximum number box plots display single page. mfRow numeric vector length two specifying layout (rows columns) plots page. yLim optional numeric vector defining y-axis limits plots.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.bp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating a PDF file to show the measured value by column of the data frame. — cyt.bp","text":"PDF file containing box plots continuous variables.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.bp2.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplot Function Enhanced for Specific Group Comparisons — cyt.bp2","title":"Boxplot Function Enhanced for Specific Group Comparisons — cyt.bp2","text":"function generates PDF file containing boxplots combination numeric factor variables provided data. first converts character columns factors checks data contains least one numeric one factor column. scale argument set \"log2\", numeric columns log2-transformed. function creates boxplots using ggplot2 numeric variable grouped factor variable.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.bp2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxplot Function Enhanced for Specific Group Comparisons — cyt.bp2","text":"","code":"cyt.bp2(x.df, Title, mfRow = c(1, 1), scale = NULL, yLim = NULL)"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.bp2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplot Function Enhanced for Specific Group Comparisons — cyt.bp2","text":"x.df matrix data frame raw data. Title string representing title PDF file. mfRow numeric vector length two specifying layout (rows columns) plots page. Defaults c(1,1). scale Transformation option continuous variables. Options NULL (default) \"log2\". set \"log2\", numeric columns transformed using log2 function. yLim optional numeric vector defining y-axis limits plots.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.bp2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boxplot Function Enhanced for Specific Group Comparisons — cyt.bp2","text":"PDF file containing boxplots.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.bp2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boxplot Function Enhanced for Specific Group Comparisons — cyt.bp2","text":"","code":"data.df <- cytodata[,-c(1,4)] cyt.bp2(data.df, Title = \"boxplot2.test2.pdf\", scale = \"log2\") #> pdf  #>   2"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.dualflashplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Dual flash plot for group comparisons. — cyt.dualflashplot","title":"Dual flash plot for group comparisons. — cyt.dualflashplot","text":"function reshapes input data computes summary statistics (mean variance) variable grouped specified factor column. calculates SSMD (Strictly Standardized Mean Difference) log2 fold change two groups (group1 group2) categorizes effect strength \"Strong Effect\", \"Moderate Effect\", \"Weak Effect\". dual flash plot generated using ggplot2 x-axis represents average log2 fold change y-axis represents SSMD. Additionally, function prints computed statistics console.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.dualflashplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dual flash plot for group comparisons. — cyt.dualflashplot","text":"","code":"cyt.dualflashplot(   data,   group_var,   group1,   group2,   ssmd_thresh = 1,   log2fc_thresh = 1,   top_labels = 15 )"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.dualflashplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dual flash plot for group comparisons. — cyt.dualflashplot","text":"data data frame containing input data. group_var string specifying name grouping column data. group1 string representing name first group comparison. group2 string representing name second group comparison. ssmd_thresh numeric threshold SSMD value used determine significance. Default 1. log2fc_thresh numeric threshold log2 fold change used determine significance. Default 1. top_labels integer specifying number top variables (based absolute SSMD) label plot. Default 15.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.dualflashplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dual flash plot for group comparisons. — cyt.dualflashplot","text":"ggplot object representing dual flash plot comparisons group1 group2.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.errbp.html","id":null,"dir":"Reference","previous_headings":"","what":"Error-bar plot for comparison. — cyt.errbp","title":"Error-bar plot for comparison. — cyt.errbp","text":"function draws error-bar plot comparing groups baseline group. creates barplot central tendency (mean median) overlays error bars representing spread (e.g., standard deviation, MAD, standard error). Optionally, p-value effect size labels (based SSMD) added, either symbols numeric values.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.errbp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error-bar plot for comparison. — cyt.errbp","text":"","code":"cyt.errbp(   center.df,   pLab = TRUE,   esLab = TRUE,   classSymbol = TRUE,   xlab = \"\",   ylab = \"\",   main = \"\" )"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.errbp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error-bar plot for comparison. — cyt.errbp","text":"center.df data frame containing following columns group: name: Group names. center: Mean median values. spread: Standard deviation, MAD, standard error. p.value: P-value comparison. effect.size: Effect size based SSMD. Note: first row center.df must correspond baseline group. pLab Logical. Whether label p-values plot. Default TRUE. esLab Logical. Whether label effect sizes plot. Default TRUE. classSymbol Logical. Whether use symbolic notation significance effect size. Default TRUE. xlab Character. Label x-axis. ylab Character. Label y-axis. main Character. Title graph.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.errbp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error-bar plot for comparison. — cyt.errbp","text":"error-bar plot produced.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heat Map — cyt.heatmap","title":"Heat Map — cyt.heatmap","text":"function creates heatmap using numeric columns provided data frame. requested via scale parameter, function applies log2 transformation data (non-positive values replaced NA). Optionally, annotation column specified exists data, function attempts generate color annotation (although annotation passed heatmap.2 current implementation). heatmap saved file, format determined file extension title.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heat Map — cyt.heatmap","text":"","code":"cyt.heatmap(data, scale = NULL, annotation_col_name = NULL, title)"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heat Map — cyt.heatmap","text":"data data frame containing input data. numeric columns used generate heatmap. scale Character. optional scaling option. set \"log2\", numeric data log2-transformed (non-positive values set NA). Default NULL. annotation_col_name Character. optional column name data used generating annotation colors. Default NULL. title Character. title heatmap file name saving plot. file extension (\".pdf\" \".png\") determines output format.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heat Map — cyt.heatmap","text":"function return value. saves heatmap file.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heat Map — cyt.heatmap","text":"","code":"cyt.heatmap(cytodata[,-4], scale = \"log2\", annotation_col_name = \"Group\") #> Error in cyt.heatmap(cytodata[, -4], scale = \"log2\", annotation_col_name = \"Group\"): argument \"title\" is missing, with no default"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze data with Principal Component Analysis (PCA) for cytokines. — cyt.pca","title":"Analyze data with Principal Component Analysis (PCA) for cytokines. — cyt.pca","text":"function performs Principal Component Analysis (PCA) cytokine data generates several types plots, including: 2D PCA plots using mixOmics's plotIndiv function, 3D scatter plots (style \"3d\" \"3D\" comp.num 3) via plot3D package, Scree plots showing individual cumulative explained variance, Loadings plots, Biplots correlation circle plots. function optionally applies log2 transformation numeric data handles analyses based either treatment stimulation groups.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze data with Principal Component Analysis (PCA) for cytokines. — cyt.pca","text":"","code":"cyt.pca(   x.df,   group.col = NULL,   trt.col = NULL,   colors = NULL,   title,   ellipse = FALSE,   comp.num = 2,   scale = NULL,   pch.values = NULL,   style = NULL )"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze data with Principal Component Analysis (PCA) for cytokines. — cyt.pca","text":"group.col Character. name column containing grouping information. specified trt.col provided, treatment column used grouping variable. trt.col Character. name column containing treatment (stimulation) information. specified group.col provided, grouping column used treatment variable. colors vector colors corresponding groups. set NULL, palette generated using rainbow() based number unique groups. title string specifying file name PDF PCA plots saved. ellipse Logical. TRUE, 95% confidence ellipse drawn PCA individuals plot. Default FALSE. comp.num Numeric. number principal components compute display. Default 2. scale Character. set \"log2\", log2 transformation applied numeric cytokine measurements (excluding grouping columns). Default NULL. pch.values vector plotting symbols (pch values) used PCA plots. Default NULL. style Character. set \"3d\" \"3D\" comp.num equals 3, 3D scatter plot generated using plot3D package. Default NULL. data.df data frame containing cytokine data. include least one column representing grouping information optionally second column representing treatment stimulation.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze data with Principal Component Analysis (PCA) for cytokines. — cyt.pca","text":"PDF file containing PCA plots generated saved.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze data with Principal Component Analysis (PCA) for cytokines. — cyt.pca","text":"","code":"if (FALSE) { # \\dontrun{ data <- cytodata[,-c(1,4, 24)] data.df <- filter(data, Group != \"ND\" & Treatment != \"Unstimulated\") cyt.pca(data.df, title = \"Example PCA Analysis.pdf\" ,colors = c(\"black\", \"red2\"), scale = \"log2\", comp.num = 3, pch.values = c(16,4), style = \"3D\", group.col = \"Group\", trt.col = \"Treatment\") cyt.pca(data.df, title = \"Example PCA Analysis 2.pdf\" ,colors = c(\"black\", \"red2\"), scale = \"log2\", comp.num = 2, pch.values = c(16,4), group.col = \"Group\") } # }"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.plsda.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt.plsda","title":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt.plsda","text":"function conducts Sparse Partial Least Squares Discriminant Analysis (sPLS-DA) provided data. uses specified group.col (optionally trt.col) define class labels assuming remaining columns contain continuous variables. function supports log2 transformation via scale parameter generates series plots, including classification plots, scree plots, loadings plots, VIP score plots. Optionally, ROC curves produced roc TRUE. Additionally, cross-validation supported via LOOCV Mfold methods. group.col trt.col provided differ, function analyzes treatment level separately.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.plsda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt.plsda","text":"","code":"cyt.plsda(   x.df,   group.col = NULL,   trt.col = NULL,   colors = NULL,   title,   ellipse = FALSE,   bg = FALSE,   conf.mat = FALSE,   var.num,   cv.opt = NULL,   fold.num = 5,   scale = NULL,   comp.num = 2,   pch.values,   style = NULL,   roc = FALSE )"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.plsda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt.plsda","text":"x.df matrix data frame containing variables. Columns specified group.col trt.col assumed continuous variables analysis. group.col string specifying column name contains group information. trt.col provided, used grouping treatment. trt.col string specifying column name treatments. Default NULL. colors vector colors groups treatments. NULL, random palette (using rainbow) generated based number groups. title string specifying file name saving PDF output. ellipse Logical. Whether draw 95% confidence ellipse figures. Default FALSE. bg Logical. Whether draw prediction background figures. Default FALSE. conf.mat Logical. Whether print confusion matrix classifications. Default FALSE. var.num Numeric. number variables used PLS-DA model. cv.opt Character. Option cross-validation method: either \"loocv\" \"Mfold\". Default NULL. fold.num Numeric. number folds use cv.opt \"Mfold\". Default 5. scale Character. Option data transformation; set \"log2\", log2 transformation applied continuous variables. Default NULL. comp.num Numeric. number components calculate sPLS-DA model. Default 2. pch.values vector integers specifying plotting characters used plots. style Character. set \"3D\" \"3d\" comp.num equals 3, 3D plot generated using plot3D package. Default NULL. roc Logical. Whether compute plot ROC curve model. Default FALSE.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.plsda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt.plsda","text":"PDF file containing classification figures, component figures Variable Importance Projection (VIP) scores, classifications based VIP scores greater 1. ROC curves confusion matrices also produced requested.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.plsda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze data with Sparse Partial Least Squares Discriminant Analysis (sPLS-DA). — cyt.plsda","text":"","code":"if (FALSE) { # \\dontrun{ # Example using overall analysis (single factor) cyt.plsda(x.df = my_data, group.col = \"Group\", title = \"PLSDA_overall.pdf\",           var.num = 25, pch.values = c(16, 4, 3))  # Example using separate group and treatment columns cyt.plsda(x.df = my_data, group.col = \"Group\", trt.col = \"Treatment\", title = \"PLSDA_byTreatment.pdf\",           colors = c(\"black\", \"purple\", \"red2\"), ellipse = TRUE, bg = TRUE, conf.mat = TRUE,           var.num = 25, cv.opt = \"loocv\", comp.num = 2, pch.values = c(16, 4, 3))  # Example with ROC curve and 3D plot (comp.num == 3) cyt.plsda(x.df = my_data, group.col = \"Group\", trt.col = \"Treatment\", title = \"PLSDA_ROC_3D.pdf\",           colors = c(\"black\", \"purple\", \"red2\"), ellipse = TRUE, bg = TRUE, conf.mat = TRUE,           var.num = 25, cv.opt = \"Mfold\", fold.num = 5, scale = \"log2\", comp.num = 3,           pch.values = c(16, 4, 3), style = \"3D\", roc = TRUE) } # }"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.rf.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Random Forest Classification on Cytokine Data — cyt.rf","title":"Run Random Forest Classification on Cytokine Data — cyt.rf","text":"function trains evaluates Random Forest classification model cytokine data. includes feature importance visualization, cross-validation feature selection, performance metrics like accuracy, sensitivity, specificity. Optionally, binary classification, function also plots ROC curve calculates AUC.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.rf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Random Forest Classification on Cytokine Data — cyt.rf","text":"","code":"cyt.rf(   data,   group_col,   ntree = 500,   mtry = 5,   train_fraction = 0.7,   plot_roc = FALSE,   k_folds = 5,   step = 0.5,   run_rfcv = TRUE )"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.rf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Random Forest Classification on Cytokine Data — cyt.rf","text":"data data frame containing cytokine data, one column grouping variable rest numerical features. group_col string representing name column grouping variable (.e., target variable classification). ntree integer specifying number trees grow forest (default 500). mtry integer specifying number variables randomly selected split (default 5). train_fraction numeric value 0 1 representing proportion data use training (default 0.7). plot_roc logical value indicating whether plot ROC curve calculate AUC binary classification (default FALSE). k_folds integer specifying number folds cross-validation (default 5). step numeric value specifying fraction variables remove step cross-validation feature selection (default 0.5). run_rfcv logical value indicating whether run Random Forest cross-validation feature selection (default TRUE).","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.rf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Random Forest Classification on Cytokine Data — cyt.rf","text":"list containing: model trained Random Forest model. confusion_matrix confusion matrix test set predictions. importance_plot ggplot object showing variable importance plot based Mean Decrease Gini. rfcv_result Results Random Forest cross-validation feature selection (run_rfcv TRUE). importance_data data frame containing variable importance based Gini index.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.rf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Random Forest Classification on Cytokine Data — cyt.rf","text":"function fits Random Forest model provided data, splitting training test sets. calculates key performance metrics accuracy, sensitivity, specificity training test sets. binary classification tasks, can also plot ROC curve calculate AUC. run_rfcv set TRUE, Random Forest cross-validation performed identify optimal number features classification.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.rf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Random Forest Classification on Cytokine Data — cyt.rf","text":"","code":"# Example usage: results <- cyt.rf(data = cytodata, group_col = \"Group\", ntree = 500, plot_roc = TRUE) #>  #> ### RANDOM FOREST RESULTS ON TRAINING SET ### #>  #> Call: #>  randomForest(formula = formula, data = train_data, ntree = ntree,      mtry = mtry, importance = TRUE)  #>                Type of random forest: classification #>                      Number of trees: 500 #> No. of variables tried at each split: 5 #>  #>         OOB estimate of  error rate: 22.38% #> Confusion matrix: #>        ND PreT2D T2D class.error #> ND     50     16   4   0.2857143 #> PreT2D 17     51   2   0.2714286 #> T2D     2      6  62   0.1142857 #>  #> Accuracy on training set:  0.7761905  #>  #> Class 'ND' metrics: #>   Sensitivity:  0.714  #>   Specificity:  0.864  #>  #> Class 'PreT2D' metrics: #>   Sensitivity:  0.729  #>   Specificity:  0.843  #>  #> Class 'T2D' metrics: #>   Sensitivity:  0.886  #>   Specificity:  0.957  #>  #> ### PREDICTIONS ON TEST SET ### #>           Reference #> Prediction ND PreT2D T2D #>     ND     15      4   2 #>     PreT2D 11     25   4 #>     T2D     3      0  23 #>  #> Accuracy on test set:  0.7241379  #>  #> Sensitivity by class: #> Class: ND: 0.5172 #> Class: PreT2D: 0.8621 #> Class: T2D: 0.7931 #>  #> Specificity by class: #> Class: ND: 0.8966 #> Class: PreT2D: 0.7414 #> Class: T2D: 0.9483  #>  #> ### RANDOM FOREST CROSS-VALIDATION FOR FEATURE SELECTION ###  #> Random Forest CV completed for feature selection. Check the plot for error vs. number of variables. print(results$confusion_matrix) #> Confusion Matrix and Statistics #>  #>           Reference #> Prediction ND PreT2D T2D #>     ND     15      4   2 #>     PreT2D 11     25   4 #>     T2D     3      0  23 #>  #> Overall Statistics #>                                            #>                Accuracy : 0.7241           #>                  95% CI : (0.6179, 0.8146) #>     No Information Rate : 0.3333           #>     P-Value [Acc > NIR] : 1.091e-13        #>                                            #>                   Kappa : 0.5862           #>                                            #>  Mcnemar's Test P-Value : 0.05842          #>  #> Statistics by Class: #>  #>                      Class: ND Class: PreT2D Class: T2D #> Sensitivity             0.5172        0.8621     0.7931 #> Specificity             0.8966        0.7414     0.9483 #> Pos Pred Value          0.7143        0.6250     0.8846 #> Neg Pred Value          0.7879        0.9149     0.9016 #> Prevalence              0.3333        0.3333     0.3333 #> Detection Rate          0.1724        0.2874     0.2644 #> Detection Prevalence    0.2414        0.4598     0.2989 #> Balanced Accuracy       0.7069        0.8017     0.8707 print(results$importance_plot)"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.skku.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution of the Data Set Shown by Skewness and Kurtosis — cyt.skku","title":"Distribution of the Data Set Shown by Skewness and Kurtosis — cyt.skku","text":"function computes summary statistics—including sample size, mean, standard error, skewness, kurtosis—numeric measurement column data set. grouping columns provided via group.cols, function computes metrics separately group defined combination columns (using first element treatment variable second grouping variable, column one given). grouping columns provided, entire data set treated single group (\"Overall\"). log2 transformation (using cutoff equal one-tenth smallest positive value data) applied generate alternative metrics. Histograms showing distribution skewness kurtosis raw log2-transformed data generated saved PDF file name provided.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.skku.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution of the Data Set Shown by Skewness and Kurtosis — cyt.skku","text":"","code":"cyt.skku(   data.df,   group.cols = NULL,   Title = NULL,   printResRaw = FALSE,   printResLog = FALSE )"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.skku.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution of the Data Set Shown by Skewness and Kurtosis — cyt.skku","text":"group.cols character vector specifying names grouping columns. provided, first element treated treatment variable second group variable. provided, entire data set treated one group. Title character string specifying file name PDF file histograms saved. omitted, plots generated current graphics device. printResRaw Logical. TRUE, function returns prints computed summary statistics raw data. Default FALSE. printResLog Logical. TRUE, function returns prints computed summary statistics log2-transformed data. Default FALSE. x.df matrix data frame containing raw data. group.cols specified, columns names group.cols treated grouping variables columns assumed numeric measurement variables.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.skku.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribution of the Data Set Shown by Skewness and Kurtosis — cyt.skku","text":"function generates histograms skewness kurtosis raw log2-transformed data. Additionally, either printResRaw /printResLog TRUE, function returns corresponding summary statistics data frame list data frames.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.skku.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distribution of the Data Set Shown by Skewness and Kurtosis — cyt.skku","text":"cutoff computed one-tenth minimum positive value among numeric measurement columns avoid taking logarithms zero. grouping columns provided, function loops unique treatment levels (using first element group.cols treatment second group, available) computes metrics measurement column within subgroup. Without grouping columns, entire data set analyzed one overall group.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.skku.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distribution of the Data Set Shown by Skewness and Kurtosis — cyt.skku","text":"","code":"if (FALSE) { # \\dontrun{ # Example with grouping columns (e.g., \"Group\" and \"Treatment\") data(cytodata) cyt.skku(cytodata[,-c(1,3,4)], Title = \"Skew_and_Kurtosis.pdf\", group.cols = c(\"Group\"))  # Example without grouping columns (analyzes the entire data set) cyt.skku(cytodata[,-c(1,4)], Title = \"Skew_and_Kurtosis_Overall.pdf\") } # }"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.ttests.html","id":null,"dir":"Reference","previous_headings":"","what":"Two Sample T-test Comparisons — cyt.ttests","title":"Two Sample T-test Comparisons — cyt.ttests","text":"function performs pairwise comparisons two groups combination categorical predictor (exactly two levels) continuous outcome variable. first converts character variables x.df factors applies log2 transformation continuous variables specified. Depending value scale, function conducts either two-sample t-test Mann-Whitney U test prints resulting p-values. error thrown categorical variable exactly two levels.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.ttests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two Sample T-test Comparisons — cyt.ttests","text":"","code":"cyt.ttests(x.df, scale = NULL)"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.ttests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two Sample T-test Comparisons — cyt.ttests","text":"x.df matrix data frame containing continuous variables categorical variables. scale character value specifying transformation continuous variables. Options NULL (default) \"log2\". scale = \"log2\", log2 transformation applied two-sample t-test used; scale NULL, Mann-Whitney U test performed.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.ttests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two Sample T-test Comparisons — cyt.ttests","text":"list p-values statistical tests combination continuous outcome categorical predictor returned.","code":""},{"path":[]},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.volc.html","id":null,"dir":"Reference","previous_headings":"","what":"Volcano Plot — cyt.volc","title":"Volcano Plot — cyt.volc","text":"function subsets numeric columns input data compares based selected grouping column. computes fold changes (ratio means) associated p-values (using two-sample t-tests) numeric variable two groups. results log2-transformed (fold change) -log10-transformed (p-values) generate volcano plot.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.volc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volcano Plot — cyt.volc","text":"","code":"cyt.volc(   data,   group_col,   cond1 = NULL,   cond2 = NULL,   fold_change_thresh = 2,   p_value_thresh = 0.05,   top_labels = 10 )"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.volc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volcano Plot — cyt.volc","text":"group_col character string specifying column name used comparisons (e.g., group, treatment, stimulation). cond1 character string specifying name first condition comparison. Default NULL. cond2 character string specifying name second condition comparison. Default NULL. fold_change_thresh numeric threshold fold change. Default 2. p_value_thresh numeric threshold p-value. Default 0.05. top_labels integer specifying number top variables label plot. Default 10. x.df matrix data frame containing data analyzed.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.volc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Volcano Plot — cyt.volc","text":"list volcano plots (ggplot objects) pairwise comparison. Additionally, function prints data frame used plotting (excluding significance column) final comparison.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.volc.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Volcano Plot — cyt.volc","text":"cond1 cond2 provided, function automatically generates possible pairwise combinations groups specified group_col comparisons.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.volc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Volcano Plot — cyt.volc","text":"","code":"if (FALSE) { # \\dontrun{   cyt.volc(cytodata, group_col = \"Group\")   cyt.volc(cytodata, group_col = \"Group\", fold_change_thresh = 2, top_labels = 15) } # }"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.xgb.html","id":null,"dir":"Reference","previous_headings":"","what":"Run XGBoost Classification on Cytokine Data — cyt.xgb","title":"Run XGBoost Classification on Cytokine Data — cyt.xgb","text":"function trains evaluates XGBoost classification model cytokine data. allows hyperparameter tuning, cross-validation, visualizes feature importance.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.xgb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run XGBoost Classification on Cytokine Data — cyt.xgb","text":"","code":"cyt.xgb(   data,   group_col,   train_fraction = 0.7,   nrounds = 500,   max_depth = 6,   eta = 0.1,   nfold = 5,   cv = FALSE,   objective = \"multi:softprob\",   early_stopping_rounds = NULL,   eval_metric = \"mlogloss\",   gamma = 0,   colsample_bytree = 1,   subsample = 1,   min_child_weight = 1,   top_n_features = 10,   verbose = 1,   plot_roc = FALSE )"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.xgb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run XGBoost Classification on Cytokine Data — cyt.xgb","text":"data data frame containing cytokine data, one column grouping variable rest numerical features. group_col string representing name column grouping variable (.e., target variable classification). train_fraction numeric value 0 1 representing proportion data use training (default 0.7). nrounds integer specifying number boosting rounds (default 500). max_depth integer specifying maximum depth trees (default 6). eta numeric value representing learning rate (default 0.1). nfold integer specifying number folds cross-validation (default 5). cv logical value indicating whether perform cross-validation (default FALSE). objective string specifying XGBoost objective function (default \"multi:softprob\" multi-class classification). early_stopping_rounds integer specifying number rounds improvement stop training early (default NULL). eval_metric string specifying evaluation metric (default \"mlogloss\"). gamma numeric value minimum loss reduction required make partition (default 0). colsample_bytree numeric value specifying subsample ratio columns constructing tree (default 1). subsample numeric value specifying subsample ratio training instances (default 1). min_child_weight numeric value specifying minimum sum instance weight needed child (default 1). top_n_features integer specifying number top features display importance plot (default 10). verbose integer specifying verbosity training process (default 1). plot_roc logical value indicating whether plot ROC curve calculate AUC binary classification (default FALSE).","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.xgb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run XGBoost Classification on Cytokine Data — cyt.xgb","text":"list containing: model trained XGBoost model. confusion_matrix confusion matrix test set predictions. importance feature importance matrix top features. class_mapping named vector showing mapping class labels numeric values used training. cv_results Cross-validation results, cross-validation performed (otherwise NULL). plot ggplot object showing feature importance plot.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.xgb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run XGBoost Classification on Cytokine Data — cyt.xgb","text":"function allows training XGBoost model cytokine data, splitting data training test sets. cross-validation enabled (cv = TRUE), performs k-fold cross-validation prints best iteration based evaluation metric. function also visualizes top N important features using xgb.ggplot.importance().","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cyt.xgb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run XGBoost Classification on Cytokine Data — cyt.xgb","text":"","code":"# Example usage: results <- cyt.xgb(data = cytodata, group_col = \"Group\", train_fraction = 0.8, cv = TRUE) #>  #> ### Group to Numeric Label Mapping ### #>     ND PreT2D    T2D  #>      0      1      2  #> Error in xgb.DMatrix(data = X_train, label = y_train): 'data' has class 'character' and length 6692. #>   'data' accepts either a numeric matrix or a single filename. print(results$confusion_matrix) #> Error: object 'results' not found print(results$plot) #> Error: object 'results' not found"},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cytodata.html","id":null,"dir":"Reference","previous_headings":"","what":"Cytokine Profiling Data — cytodata","title":"Cytokine Profiling Data — cytodata","text":"Contains observed values cytokines respective treatment groups.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cytodata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cytokine Profiling Data — cytodata","text":"","code":"cytodata"},{"path":[]},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cytodata.html","id":"cytodata","dir":"Reference","previous_headings":"","what":"cytodata","title":"Cytokine Profiling Data — cytodata","text":"data frame 297 rows 29 columns: Group Group assigned subjects. Stimulation Stimulation recieved subjects. Treatment Treatment recieved subjects.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cytodata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cytokine Profiling Data — cytodata","text":"Example data put together cytokine profiling.","code":""},{"path":"https://saraswatsh.github.io/CytoProfile/reference/cytodata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cytokine Profiling Data — cytodata","text":"","code":"data(cytodata)"}]
